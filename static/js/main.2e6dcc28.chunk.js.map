{"version":3,"sources":["utils/network.js","utils/contracts.js","utils/form.js","components/select.js","components/form.js","components/approve-celr.js","App.js","utils/subscribe.js","router.js","models/polc.js","models/liba.js","models/network.js","index.js"],"names":["networkConfigs","localNetworkConfig","supportedTokens","symbol","address","getNetworkConfig","networkID","checkNetworkCompatbility","networkVersion","window","web3","currentProvider","Modal","error","title","content","contractOptions","block","fallback","type","url","contracts","PoLC","LiBA","ERC20","polls","accounts","blocks","currencyFieldOptions","unit","formatter","value","parser","replace","celerFieldOptions","dayFieldOptions","blockFieldOptions","rateFieldOptions","minValueRule","minValue","validator","rule","callback","Option","Select","defaultProps","allowClear","disabled","optionFilterProp","placeholder","state","undefined","onChange","setState","getValue","defaultValue","props","renderOptions","options","_","map","text","key","this","omit","isNil","showSearch","React","Component","FormItem","Form","Item","buttonLayout","wrapperCol","sm","span","offset","xs","FIELD_MAP","date","DatePicker","input","Input","number","InputNumber","TextArea","select","CustomizeForm","handleSubmit","e","form","onSubmit","preventDefault","validateFields","err","values","renderFormItems","formItemLayout","items","getFieldDecorator","item","field","fieldOptions","initialValue","label","name","rules","Field","decoratorOptions","getValueFromEvent","args","fileList","target","checked","capitalize","submitText","noop","htmlType","labelCol","create","onValuesChange","changedValues","ApproveCelrForm","context","onClose","current","ERC20ExampleToken","methods","approve","utils","toWei","toString","send","createRef","drizzle","visible","formItems","message","required","onOk","onCancel","ref","contextTypes","PropTypes","object","Sider","Layout","Content","Footer","App","toggleModal","prevState","isModalVisible","dispatch","account","events","NewCommitment","fromBlock","filter","user","event","returnValues","commitmentId","commitmentsByUser","cacheCall","NewAuction","auctionId","getAuction","getAuctionPeriod","NewBid","bidder","payload","subscribeEvent","blockNumber","selectedAddress","setInterval","location","reload","eth","getBlock","then","subscribeChainInfo","children","pathname","className","accountIndex","units","theme","mode","selectedKeys","slice","to","onClick","style","textAlign","withRouter","drizzleConnect","ConnectedRouter","routerRedux","LoadingWrapper","LoadingContainer","redirectToHome","RouterConfig","history","app","Dynamic","component","Auction","store","_store","loadingComp","Spin","exact","path","render","namespace","effects","reducers","save","action","addBid","bids","rootSaga","all","drizzleSagas","saga","fork","dva","initialState","generateContractsInitialState","extraReducers","drizzleReducers","onError","resp","msg","srv","use","createLoading","model","PoLCModel","LiBAModel","NetworkModel","router","require","default","start","runSaga"],"mappings":"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","file":"static/js/main.2e6dcc28.chunk.js","sourcesContent":["import { Modal } from 'antd';\n\nconst MAINNET = '1';\nconst ROPSTEN = '3';\n\nconst networkConfigs = {};\n\nconst localNetworkConfig = {\n    supportedTokens: [\n        {\n            symbol: 'ETH',\n            address: '0x0000000000000000000000000000000000000000'\n        }\n    ]\n};\n\nexport const getNetworkConfig = networkID => {\n    if (networkConfigs[networkID]) {\n        return networkConfigs[networkID];\n    }\n\n    return localNetworkConfig;\n};\n\nexport const checkNetworkCompatbility = () => {\n    if (process.env.NODE_ENV === 'development') {\n        return;\n    }\n\n    const networkVersion = window.web3.currentProvider.networkVersion;\n    if (networkVersion !== MAINNET && networkVersion !== ROPSTEN) {\n        Modal.error({\n            title: 'Current network is not supported',\n            content: 'Please switch to mainnet or ropsten'\n        });\n    }\n};\n","import PoLC from './../contracts/PoLC.json';\nimport LiBA from './../contracts/LiBA.json';\nimport ERC20 from './../contracts/ERC20ExampleToken.json';\n\n// let drizzle know what contracts we want\nconst contractOptions = {\n    web3: {\n        block: false,\n        fallback: {\n            type: 'ws',\n            url: 'ws://localhost:8545'\n        }\n    },\n    contracts: [PoLC, LiBA, ERC20],\n    polls: {\n        accounts: 1000,\n        blocks: 1000\n    }\n};\n\nexport default contractOptions;\n","export const currencyFieldOptions = unit => ({\n    formatter: value => (value ? `${value}${unit}` : ''),\n    parser: value => value.replace(/[A-Z]/g, '')\n});\n\nexport const celerFieldOptions = currencyFieldOptions('CELR');\n\nexport const dayFieldOptions = {\n    formatter: value => (value ? `${value}day` : ''),\n    parser: value => value.replace(/[a-z]/g, '')\n};\n\nexport const blockFieldOptions = {\n    formatter: value => (value ? `${value}block` : ''),\n    parser: value => value.replace(/[a-z]/g, '')\n};\n\nexport const rateFieldOptions = {\n    formatter: value => (value ? `${value}%` : ''),\n    parser: value => value.replace(/[%]/g, '')\n};\n\nexport const minValueRule = minValue => ({\n    validator: (rule, value, callback) => {\n        if (value < minValue) {\n            const msg = `value is smaller than ${minValue}`;\n            callback(msg);\n        }\n\n        callback();\n    }\n});\n","import React from 'react';\nimport { Select } from 'antd';\nimport _ from 'lodash';\n\nconst Option = Select.Option;\n\nexport default class extends React.Component {\n    defaultProps = {\n        allowClear: true,\n        disabled: false,\n        optionFilterProp: 'children',\n        placeholder: ''\n    };\n\n    state = { value: undefined };\n\n    onChange = (value: ValueType) => this.setState({ value });\n\n    getValue = () => {\n        const { defaultValue } = this.props;\n        const { value } = this.state;\n        return value || defaultValue;\n    };\n\n    renderOptions = () => {\n        const { options } = this.props;\n        return _.map(options, ([value, text]) => (\n            <Option key={value} value={value}>\n                {text}\n            </Option>\n        ));\n    };\n\n    render() {\n        const { defaultValue } = this.props;\n        const props = {\n            ..._.omit(this.props, ['options', 'defaultValue'])\n        };\n\n        if (!props.onChange) {\n            props.onChange = this.onChange;\n        }\n        if (!_.isNil(defaultValue)) {\n            props.defaultValue = defaultValue;\n        }\n\n        return (\n            <Select {...props} showSearch={true}>\n                {this.renderOptions()}\n            </Select>\n        );\n    }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { Button, DatePicker, Form, Input, InputNumber } from 'antd';\n\nimport Select from './select';\n\nconst FormItem = Form.Item;\n\nconst defaultFormItemLayout = {\n    labelCol: {\n        sm: { span: 8 },\n        xs: { span: 24 }\n    },\n\n    wrapperCol: {\n        sm: { span: 16 },\n        xs: { span: 24 }\n    }\n};\n\nconst buttonLayout = {\n    wrapperCol: {\n        sm: { span: 3, offset: 21 },\n        xs: { span: 24 }\n    }\n};\n\nconst FIELD_MAP = {\n    date: DatePicker,\n    input: Input,\n    number: InputNumber,\n    text: Input.TextArea,\n    select: Select\n};\n\nclass CustomizeForm extends React.Component {\n    handleSubmit = e => {\n        const { form, onSubmit } = this.props;\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                onSubmit(values);\n            }\n        });\n    };\n\n    renderFormItems = () => {\n        const { form, formItemLayout, items } = this.props;\n        const { getFieldDecorator } = form;\n\n        return _.map(items, item => {\n            const {\n                field = 'input',\n                fieldOptions,\n                initialValue,\n                label,\n                name,\n                rules\n            } = item;\n            const Field = FIELD_MAP[field];\n            const decoratorOptions = {\n                initialValue,\n                rules,\n                getValueFromEvent(...args) {\n                    if (field === 'file') {\n                        return args[0].fileList;\n                    }\n\n                    const [e] = args;\n                    if (!e || !e.target) {\n                        return e;\n                    }\n\n                    const { target } = e;\n                    return target.type === 'checkbox'\n                        ? target.checked\n                        : target.value;\n                }\n            };\n\n            return (\n                <FormItem\n                    key={name}\n                    {...formItemLayout}\n                    label={!label ? _.capitalize(name) : label}\n                >\n                    {getFieldDecorator(name, decoratorOptions)(\n                        <Field {...fieldOptions} />\n                    )}\n                </FormItem>\n            );\n        });\n    };\n\n    render() {\n        const { onSubmit, submitText } = this.props;\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                {this.renderFormItems()}\n                {onSubmit !== _.noop && (\n                    <FormItem {...buttonLayout}>\n                        <Button htmlType=\"submit\" type=\"primary\">\n                            {submitText}\n                        </Button>\n                    </FormItem>\n                )}\n            </Form>\n        );\n    }\n}\n\nCustomizeForm.defaultProps = {\n    formItemLayout: defaultFormItemLayout,\n    onSubmit: _.noop,\n    submitText: 'Save'\n};\n\nexport default Form.create({\n    onValuesChange(props, changedValues) {\n        if (props.onValuesChange) {\n            props.onValuesChange(changedValues);\n        }\n    }\n})(CustomizeForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from './form';\nimport { celerFieldOptions } from '../utils/form';\n\nclass ApproveCelrForm extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.form = React.createRef();\n        this.contracts = context.drizzle.contracts;\n    }\n\n    onSubmit = () => {\n        const { onClose } = this.props;\n\n        this.form.current.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            const { value } = values;\n\n            this.contracts.ERC20ExampleToken.methods\n                .approve(\n                    this.contracts.LiBA.address,\n                    web3.utils.toWei(value.toString(), 'ether')\n                )\n                .send();\n\n            onClose();\n        });\n    };\n\n    render() {\n        const { visible, onClose } = this.props;\n        const formItems = [\n            {\n                name: 'value',\n                field: 'number',\n                fieldOptions: {\n                    ...celerFieldOptions,\n                    placeholder: 'The amount of CELR allowance LiBA has'\n                },\n                rules: [\n                    {\n                        message: 'Please enter a value!',\n                        required: true\n                    }\n                ]\n            }\n        ];\n\n        return (\n            <Modal\n                title=\"Approve CELR to LiBA\"\n                visible={visible}\n                onOk={this.onSubmit}\n                onCancel={onClose}\n            >\n                <Form ref={this.form} items={formItems} />\n            </Modal>\n        );\n    }\n}\n\nApproveCelrForm.propTypes = {\n    visible: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nApproveCelrForm.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nexport default ApproveCelrForm;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { drizzleConnect } from 'drizzle-react';\nimport { withRouter, Link } from 'dva/router';\nimport { Card, Layout, Menu, Button } from 'antd';\nimport { AccountData } from 'drizzle-react-components';\n\nimport ApproveCELRForm from './components/approve-celr';\nimport { subscribeEvent, subscribeChainInfo } from './utils/subscribe';\nimport { getNetworkConfig } from './utils/network';\n\nimport './App.css';\n\nconst { Sider, Content, Footer } = Layout;\n\nclass App extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = { isModalVisible: false };\n        this.contracts = context.drizzle.contracts;\n        this.web3 = context.drizzle.web3;\n    }\n\n    componentWillMount() {\n        const { accounts, dispatch } = this.props;\n        subscribeEvent(accounts[0], this.contracts, dispatch);\n        subscribeChainInfo(this.web3, dispatch);\n\n        dispatch({\n            type: 'network/save',\n            payload: getNetworkConfig(this.web3.currentProvider.networkVersion)\n        });\n    }\n\n    toggleModal = () => {\n        this.setState(prevState => ({\n            isModalVisible: !prevState.isModalVisible\n        }));\n    };\n\n    render() {\n        const { isModalVisible } = this.state;\n        const { children, location } = this.props;\n        const { pathname } = location;\n\n        return (\n            <Layout>\n                <Sider>\n                    <Card className=\"account-data\" title=\"Account info\">\n                        <AccountData accountIndex={0} units={'ether'} />\n                    </Card>\n                    <Menu\n                        theme=\"dark\"\n                        mode=\"inline\"\n                        selectedKeys={[pathname.slice(1)]}\n                    >\n                        <Menu.Item key=\"polc\">\n                            <Link to=\"/polc\">PoLC</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"liba\">\n                            <Link to=\"/liba\">LiBA</Link>\n                        </Menu.Item>\n                        <Menu.Item className=\"approve-celr\">\n                            <Button\n                                type=\"primary\"\n                                block\n                                onClick={this.toggleModal}\n                            >\n                                Approve CELR\n                            </Button>\n                        </Menu.Item>\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Content>\n                        {children}\n                        <ApproveCELRForm\n                            visible={isModalVisible}\n                            onClose={this.toggleModal}\n                        />\n                    </Content>\n                    <Footer style={{ textAlign: 'center' }}>\n                        cEconomy ©2019 Created by Celer Network\n                    </Footer>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n\nApp.propTypes = {\n    children: PropTypes.element.isRequired,\n    location: PropTypes.object.isRequired\n};\n\nApp.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    const { accounts } = state;\n\n    return {\n        accounts\n    };\n}\n\nexport default withRouter(drizzleConnect(App, mapStateToProps));\n","const POLL_INTERVAL = 1000;\n\nexport const subscribeEvent = (account, contracts, dispatch) => {\n    const { PoLC, LiBA } = contracts;\n\n    PoLC.events.NewCommitment(\n        {\n            fromBlock: 0,\n            filter: {\n                user: account\n            }\n        },\n        (err, event) => {\n            if (err) {\n                return;\n            }\n\n            const { commitmentId, user } = event.returnValues;\n            PoLC.methods.commitmentsByUser.cacheCall(user, commitmentId);\n        }\n    );\n\n    LiBA.events.NewAuction(\n        {\n            fromBlock: 0\n        },\n        (err, event) => {\n            if (err) {\n                return;\n            }\n\n            const { auctionId } = event.returnValues;\n            LiBA.methods.getAuction.cacheCall(auctionId);\n            LiBA.methods.getAuctionPeriod.cacheCall(auctionId);\n        }\n    );\n\n    LiBA.events.NewBid(\n        {\n            fromBlock: 0,\n            filter: {\n                bidder: account\n            }\n        },\n        (err, event) => {\n            if (err) {\n                return;\n            }\n\n            const { auctionId } = event.returnValues;\n            dispatch({\n                type: 'LiBA/addBid',\n                payload: { auctionId }\n            });\n        }\n    );\n};\n\nexport const subscribeChainInfo = (web3, dispatch) => {\n    const account = web3.currentProvider.selectedAddress;\n    let blockNumber;\n\n    setInterval(() => {\n        if (account !== web3.currentProvider.selectedAddress) {\n            window.location.reload();\n        }\n\n        return web3.eth.getBlock('latest').then(block => {\n            if (block && blockNumber !== block.number) {\n                dispatch({\n                    type: 'network/save',\n                    payload: { block }\n                });\n                blockNumber = block.number;\n            }\n        });\n    }, POLL_INTERVAL);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, routerRedux, Switch, Route, Redirect } from 'dva/router';\nimport Dynamic from 'dva/dynamic';\nimport { DrizzleProvider } from 'drizzle-react';\nimport { LoadingContainer } from 'drizzle-react-components';\nimport { Spin } from 'antd';\n\nimport App from './App';\nimport contractOptions from './utils/contracts';\n\nconst { ConnectedRouter } = routerRedux;\nconst LoadingWrapper = withRouter(LoadingContainer);\n\nconst redirectToHome = () => <Redirect to=\"/polc\" />;\n\nfunction RouterConfig({ history, app }) {\n    const PoLC = Dynamic({\n        app,\n        component: () => import('./routes/polc')\n    });\n    const LiBA = Dynamic({\n        app,\n        component: () => import('./routes/liba')\n    });\n    const Auction = Dynamic({\n        app,\n        component: () => import('./routes/auction')\n    });\n\n    return (\n        <DrizzleProvider options={contractOptions} store={app._store}>\n            <ConnectedRouter history={history}>\n                <LoadingWrapper loadingComp={Spin}>\n                    <App>\n                        <Switch>\n                            <Route exact path=\"/polc\" component={PoLC} />\n                            <Route exact path=\"/liba\" component={LiBA} />\n                            <Route\n                                exact\n                                path=\"/auction/:id\"\n                                component={Auction}\n                            />\n                            <Route exact path=\"/\" render={redirectToHome} />\n                        </Switch>\n                    </App>\n                </LoadingWrapper>\n            </ConnectedRouter>\n        </DrizzleProvider>\n    );\n}\n\nRouterConfig.propTypes = {\n    history: PropTypes.object.isRequired\n};\n\nexport default RouterConfig;\n","export default {\n    namespace: 'PoLC',\n\n    state: {},\n\n    effects: {},\n\n    reducers: {\n        save(state, action) {\n            return { ...state, ...action.payload };\n        }\n    }\n};\n","export default {\n    namespace: 'LiBA',\n\n    state: {},\n\n    effects: {},\n\n    reducers: {\n        addBid(state, action) {\n            return {\n                ...state,\n                bids: [...(state.bids || []), action.payload.auctionId]\n            };\n        },\n\n        save(state, action) {\n            return { ...state, ...action.payload };\n        }\n    }\n};\n","export default {\n    namespace: 'network',\n\n    state: {},\n\n    effects: {},\n\n    reducers: {\n        save(state, action) {\n            return { ...state, ...action.payload };\n        }\n    }\n};\n","import dva from 'dva';\nimport createLoading from 'dva-loading';\nimport { all, fork } from 'redux-saga/effects';\nimport {\n    generateContractsInitialState,\n    drizzleReducers,\n    drizzleSagas\n} from 'drizzle';\nimport { message } from 'antd';\n\nimport contractOptions from './utils/contracts';\nimport { checkNetworkCompatbility } from './utils/network';\nimport PoLCModel from './models/polc';\nimport LiBAModel from './models/liba';\nimport NetworkModel from './models/network';\n\nfunction*rootSaga() {\n    yield all(drizzleSagas.map(saga => fork(saga)));\n}\n\ncheckNetworkCompatbility();\n\n// 1. Initialize\nconst app = dva({\n    initialState: {\n        ...generateContractsInitialState(contractOptions)\n    },\n    extraReducers: {\n        ...drizzleReducers\n    },\n    onError(err, dispatch) {\n        if (err.resp) {\n            message.error(err.resp.msg);\n        } else if (err.srv) {\n            message.error(err.srv.msg);\n        } else {\n            message.error(err);\n        }\n    }\n});\n\n// 2. Plugins\napp.use(\n    createLoading({\n        namespace: 'loading'\n        // effects: enable effects level loading state\n    })\n);\n\n// 3. Model\n// Moved to router.js\napp.model(PoLCModel);\napp.model(LiBAModel);\napp.model(NetworkModel);\n\n// 4. Router\napp.router(require('./router.js').default);\n\n// 5. Start\napp.start('#root');\napp._store.runSaga(rootSaga);\n"],"sourceRoot":""}