{"version":3,"sources":["utils/unit.js","utils/liba.js","components/liba/auction-form.js","routes/liba.js"],"names":["getUnitByAddress","supportedTokens","address","token","_","find","supportedToken","symbol","formatCurrencyValue","value","unit","toNumber","web3","utils","fromWei","formatCelrValue","BN","BID","REVEAL","CLAIM","CHALLENGE","FINALIZE","FINALIZED","EXPIRED","getCurrentPeriod","network","auction","auctionPeriods","blockNumber","get","auctionPeriod","args","bidEnd","revealEnd","claimEnd","challengeEnd","finalizeEnd","finalized","getWinners","bids","topLoser","winners","remainingValue","sort","compareBid","forEach","bid","bidder","push","last","calculateRepay","result","rate","includes","add","muln","parseInt","divn","console","log","toString","bid1","bid2","rate1","celerValue1","rate2","celerValue2","AuctionForm","props","context","handleValueChange","changedValue","setState","handleInitAuction","onClose","form","current","validateFields","err","values","bidDuration","revealDuration","claimDuration","challengeDuration","finalizeDuration","duration","maxRate","minValue","collateralAddress","collateralValue","contracts","LiBA","methods","initAuction","cacheSend","toWei","state","React","createRef","drizzle","this","visible","supportedTokenOptions","map","formItems","name","field","fieldOptions","options","placeholder","rules","message","required","currencyFieldOptions","minValueRule","dayFieldOptions","label","rateFieldOptions","step","precision","blockFieldOptions","title","onOk","onCancel","ref","items","onValuesChange","Component","contextTypes","PropTypes","object","tabList","key","tab","onTabChange","toggleModal","prevState","isModalVisible","renderAuction","asker","tokenAddress","Item","actions","to","type","span","getAuctionPeriod","renderAuctions","accounts","data","getAuction","filter","grid","gutter","column","dataSource","renderItem","activeTabKey","extra","onClick","drizzleConnect"],"mappings":"4IAAA,6IAKaA,GALb,OAKgC,SAACC,EAAiBC,GAC9C,IAAMC,EAAQC,IAAEC,KACZJ,GACA,SAAAK,GAAc,OAAIA,EAAeJ,UAAYA,KAGjD,OAAKC,EAGEA,EAAMI,OAFF,KAKFC,EAAsB,SAACC,EAAOC,GAGvC,OAFYN,IAAEO,SAASF,GAEb,IACA,GAAN,OAAUA,EAAV,QAGE,GAAN,OAAUG,IAAKC,MAAMC,QAAQL,GAA7B,YAAuCC,IAG9BK,EAAkB,SAAAN,GAC3B,OAAOD,EAAoBC,EAAO,U,4ZCzB9BO,E,OAAOJ,EAAKC,MAAZG,GAEKC,EAAM,MACNC,EAAS,SACTC,EAAQ,QACRC,EAAY,YACZC,EAAW,WACXC,EAAY,YACZC,EAAU,UAGVC,EAAmB,SAACC,EAASC,EAASC,GAC/C,IAAMC,EAAcxB,IAAEyB,IAAIJ,EAAS,gBAC7BK,EAAgB1B,IAAEC,KACpBsB,GACA,SAAAG,GAAa,OAAIA,EAAcC,KAAK,KAAOL,EAAQK,KAAK,MAJM,EAa9D3B,IAAEyB,IAAIC,EAAe,QAAS,IAN9BE,EAP8D,EAO9DA,OACAC,EAR8D,EAQ9DA,UACAC,EAT8D,EAS9DA,SACAC,EAV8D,EAU9DA,aACAC,EAX8D,EAW9DA,YACAC,EAZ8D,EAY9DA,UAGJ,OAAIT,EAAcxB,IAAEO,SAASqB,GAClBf,EAGPW,EAAcxB,IAAEO,SAASsB,GAClBf,EAGPU,EAAcxB,IAAEO,SAASuB,GAClBf,EAGPS,EAAcxB,IAAEO,SAASwB,GAClBf,EAGPQ,EAAcxB,IAAEO,SAASyB,GAClBf,EAGPgB,EACOf,EAGJC,GAGEe,EAAa,SAACZ,EAASa,GAChC,IACIC,EADEC,EAAU,GAEZC,EAAiBhB,EAAQjB,MAAMA,MAoBnC,OAnBA8B,EAAKI,KAAKC,GAEVxC,IAAEyC,QAAQN,GAAM,SAAAO,GAAQ,IACbC,EADY,YACFD,EAAIf,KADF,MAEXtB,EAAUqC,EAAIrC,MAAdA,MAER,GAAIiC,EAAiB,EAEjB,OADAF,EAAWO,GACJ,EAGXL,GAAkBjC,EAClBgC,EAAQO,KAAKD,MAGZP,IACDA,EAAWpC,IAAE6C,KAAKR,IAGf,CAAEA,UAASD,aAGTU,EAAiB,SAACX,EAAME,GACjC,IAAIU,EAAS,IAAInC,EAAG,GAcpB,OAZAZ,IAAEyC,QAAQN,GAAM,SAAAO,GAAQ,IACbC,EADY,YACFD,EAAIf,KADF,QAEKe,EAAIrC,MAApBA,EAFW,EAEXA,MAAO2C,EAFI,EAEJA,KAEVhD,IAAEiD,SAASZ,EAASM,KAIzBI,EAASA,EAAOG,IAAI,IAAItC,EAAGP,GAAO8C,KAAK,IAAMC,SAASJ,IAAOK,KAAK,MAClEC,QAAQC,IAAIP,EAAMD,EAAOS,gBAGtBT,GAGLP,EAAa,SAACiB,EAAMC,GAAU,IAAD,EACAD,EAAKpD,MAA5BsD,EADuB,EACvBA,MAAOC,EADgB,EAChBA,YADgB,EAEAF,EAAKrD,MAA5BwD,EAFuB,EAEvBA,MAAOC,EAFgB,EAEhBA,YAEf,OAAIH,IAAUE,EACHF,EAAQE,EAGZC,EAAcF,I,60BC7FnBG,E,YACF,WAAYC,EAAOC,GAAU,IAAD,8BACxB,4CAAMD,KAOVE,kBAAoB,SAAAC,GAAY,OAAI,EAAKC,SAASD,IARtB,EAU5BE,kBAAoB,WAAO,IACfC,EAAY,EAAKN,MAAjBM,QAER,EAAKC,KAAKC,QAAQC,gBAAe,SAACC,EAAKC,GACnC,IAAID,EAAJ,CAD8C,IAM1C3E,EAYA4E,EAZA5E,MACA6E,EAWAD,EAXAC,YACAC,EAUAF,EAVAE,eACAC,EASAH,EATAG,cACAC,EAQAJ,EARAI,kBACAC,EAOAL,EAPAK,iBACA3E,EAMAsE,EANAtE,MACA4E,EAKAN,EALAM,SACAC,EAIAP,EAJAO,QACAC,EAGAR,EAHAQ,SACAC,EAEAT,EAFAS,kBAhB0C,EAkB1CT,EADAU,uBAjB0C,MAiBxB,EAjBwB,EAoB9C,EAAKC,UAAUC,KAAKC,QAAQC,YAAYC,UACpC3F,EACA6E,EACAC,EACAC,EACAC,EACAC,EACAxE,IAAKC,MAAMkF,MAAMtF,EAAMmD,WAAY,SACnCyB,EACAC,EACA1E,IAAKC,MAAMkF,MAAMR,EAAS3B,WAAY,SACtC4B,EACA5E,IAAKC,MAAMkF,MAAMN,EAAgB7B,WAAY,UAEjDc,SA5CJ,EAAKsB,MAAQ,GACb,EAAKrB,KAAOsB,IAAMC,YAClB,EAAKR,UAAYrB,EAAQ8B,QAAQT,UALT,E,sEAmDlB,IAAD,EACiCU,KAAKhC,MAAnCiC,EADH,EACGA,QAAS5E,EADZ,EACYA,QAASiD,EADrB,EACqBA,QACpB4B,EAAwB7E,EAAQxB,gBAAgBsG,KAClD,SAAAjG,GAAc,MAAI,CACdA,EAAeJ,QADD,UAEXI,EAAeC,OAFJ,aAEeD,EAAeJ,QAF9B,SAKhBQ,EAAOV,YACTyB,EAAQxB,gBACRmG,KAAKJ,MAAM7F,OAGTqG,EAAY,CACd,CACIC,KAAM,QACNC,MAAO,SACPC,aAAc,CACVC,QAASN,EACTO,YAAa,wBAEjBC,MAAO,CACH,CACIC,QAAS,yBACTC,UAAU,KAItB,CACIP,KAAM,QACNC,MAAO,SACPC,aAAa,EAAD,GACLM,YAAqBvG,GADhB,CAERmG,YAAa,kCAEjBC,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,wBACTC,UAAU,KAItB,CACIP,KAAM,WACNC,MAAO,SACPC,aAAa,EAAD,GACLQ,IADK,CAERN,YAAa,kCAEjBC,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,2BACTC,UAAU,KAItB,CACIP,KAAM,UACNW,MAAO,WACPV,MAAO,SACPC,aAAa,EAAD,GACLU,IADK,CAERC,KAAM,KACNC,UAAW,EACXV,YAAa,8BAEjBC,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,2BACTC,UAAU,KAItB,CACIP,KAAM,WACNW,MAAO,YACPV,MAAO,SACPC,aAAa,EAAD,GACLM,YAAqBvG,GADhB,CAERmG,YAAa,kCAEjBC,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,4BACTC,UAAU,KAItB,CACIP,KAAM,oBACNW,MAAO,qBACPT,aAAc,CACVE,YAAa,oCAGrB,CACIJ,KAAM,kBACNW,MAAO,mBACPV,MAAO,SACPC,aAAc,CACVE,YAAa,kCAEjBC,MAAO,CAACI,YAAa,KAEzB,CACIT,KAAM,cACNW,MAAO,eACPV,MAAO,SACPC,aAAa,EAAD,GACLa,IADK,CAERX,YAAa,mCAEjBC,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,2BACTC,UAAU,KAItB,CACIP,KAAM,iBACNW,MAAO,kBACPV,MAAO,SACPC,aAAa,EAAD,GACLa,IADK,CAERX,YAAa,qCAEjBC,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,2BACTC,UAAU,KAItB,CACIP,KAAM,gBACNW,MAAO,iBACPV,MAAO,SACPC,aAAa,EAAD,GACLa,IADK,CAERX,YAAa,oCAEjBC,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,2BACTC,UAAU,KAItB,CACIP,KAAM,oBACNW,MAAO,qBACPV,MAAO,SACPC,aAAa,EAAD,GACLa,IADK,CAERX,YAAa,qCAEjBC,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,2BACTC,UAAU,KAItB,CACIP,KAAM,mBACNW,MAAO,oBACPV,MAAO,SACPC,aAAa,EAAD,GACLa,IADK,CAERX,YAAa,oCAEjBC,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,2BACTC,UAAU,MAM1B,OACI,kBAAC,IAAD,CACIS,MAAM,iBACNpB,QAASA,EACTqB,KAAMtB,KAAK3B,kBACXkD,SAAUjD,GAEV,kBAAC,IAAD,CACIkD,IAAKxB,KAAKzB,KACVkD,MAAOrB,EACPsB,eAAgB1B,KAAK9B,yB,GA5Pf2B,IAAM8B,WAwQhC5D,EAAY6D,aAAe,CACvB7B,QAAS8B,IAAUC,QAGR/D,Q,kkBChRf,IAAMgE,EAAU,CACZ,CACIC,IAAK,MACLC,IAAK,OAET,CACID,IAAK,MACLC,IAAK,OAET,CACID,IAAK,MACLC,IAAK,QAIP1C,E,YACF,WAAYvB,EAAOC,GAAU,IAAD,8BACxB,4CAAMD,KAMVkE,YAAc,SAAAD,GACV,EAAK7D,SAAS,CAAE6D,SARQ,EAW5BE,YAAc,WACV,EAAK/D,UAAS,SAAAgE,GAAS,MAAK,CACxBC,gBAAiBD,EAAUC,oBAbP,EAiB5BC,cAAgB,SAAAhH,GAAY,IAAD,EACG,EAAK0C,MAAvB3C,EADe,EACfA,QAASkE,EADM,EACNA,KADM,EAE0BjE,EAAQjB,MAAjDkI,EAFe,EAEfA,MAAOlI,EAFQ,EAERA,MAAO4E,EAFC,EAEDA,SAAUuD,EAFT,EAESA,aAC1BlI,EAAOV,YAAiByB,EAAQxB,gBAAiB2I,GAEvD,OACI,kBAAC,IAAKC,KAAN,KACI,kBAAC,IAAD,CACIC,QAAS,CACL,kBAAC,OAAD,CAAMC,GAAE,mBAAcrH,EAAQK,KAAK,KAC/B,kBAAC,IAAD,CAAMiH,KAAK,MAAMvB,MAAM,mBAI/B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKwB,KAAM,IACP,kBAAC,IAAD,CAAWxB,MAAM,QAAQhH,MAAOkI,KAEpC,kBAAC,IAAD,CAAKM,KAAM,IACP,kBAAC,IAAD,CACIxB,MAAM,SACNhH,MAAOe,YACHC,EACAC,EACAiE,EAAKuD,qBAIjB,kBAAC,IAAD,CAAKD,KAAM,IACP,kBAAC,IAAD,CACIxB,MAAM,QACNhH,MAAOD,YAAoBC,EAAOC,MAG1C,kBAAC,IAAD,CAAKuI,KAAM,IACP,kBAAC,IAAD,CACIxB,MAAM,WACNhH,MAAK,UAAK4E,EAAL,eAtDL,EA+D5B8D,eAAiB,WAAO,IAAD,EACQ,EAAK/E,MAAxBgF,EADW,EACXA,SAAUzD,EADC,EACDA,KACV0C,EAAQ,EAAKrC,MAAbqC,IAEJgB,EAAOjJ,IAAE2E,OAAOY,EAAK2D,YAezB,MAbY,QAARjB,IACAgB,EAAOjJ,IAAEmJ,OACLF,GACA,SAAA3H,GAAO,OAAIA,EAAQjB,MAAMkI,QAAUS,EAAS,OAIxC,QAARf,IACAgB,EAAOjJ,IAAEmJ,OAAOF,GAAM,SAAA3H,GAAO,OACzBtB,IAAEiD,SAASsC,EAAKpD,KAAMb,EAAQK,KAAK,QAKvC,kBAAC,IAAD,CACIyH,KAAM,CAAEC,OAAQ,GAAIC,OAAQ,GAC5BC,WAAYN,EACZO,WAAY,EAAKlB,iBAnFzB,EAAK1C,MAAQ,CAAEyC,gBAAgB,EAAOJ,IAAK,OAC3C,EAAK3C,UAAYrB,EAAQ8B,QAAQT,UAJT,E,sEA2FlB,IAAD,EAC2BU,KAAKJ,MAA7ByC,EADH,EACGA,eAAgBJ,EADnB,EACmBA,IAChB5G,EAAY2E,KAAKhC,MAAjB3C,QAER,OACI,kBAAC,IAAD,CACI0G,QAASA,EACTV,MAAM,OACNoC,aAAcxB,EACdC,YAAalC,KAAKkC,YAClBwB,MACI,kBAAC,IAAD,CAAQd,KAAK,UAAUe,QAAS3D,KAAKmC,aAArC,mBAKHnC,KAAK+C,iBACN,kBAAC,EAAD,CACI1H,QAASA,EACT4E,QAASoC,EACT/D,QAAS0B,KAAKmC,mB,GAhHftC,IAAM8B,WA2HzBpC,EAAKqC,aAAe,CAChB7B,QAAS8B,IAAUC,QAaR8B,mCAAerE,GAV9B,SAAyBK,GAAQ,IACrBN,EAAuCM,EAAvCN,UAAW0D,EAA4BpD,EAA5BoD,SAAUzD,EAAkBK,EAAlBL,KAE7B,MAAO,CACHyD,WACA3H,QAJ2CuE,EAAZvE,QAK/BkE,KAAK,KAAMA,EAAP,GAAgBD,EAAUC","file":"static/js/7.dcbb14a9.chunk.js","sourcesContent":["import _ from 'lodash';\nimport web3 from 'web3';\n\nimport './network';\n\nexport const getUnitByAddress = (supportedTokens, address) => {\n    const token = _.find(\n        supportedTokens,\n        supportedToken => supportedToken.address === address\n    );\n\n    if (!token) {\n        return '';\n    }\n    return token.symbol;\n};\n\nexport const formatCurrencyValue = (value, unit) => {\n    const num = _.toNumber(value);\n\n    if (num < 100000) {\n        return `${value} wei`;\n    }\n\n    return `${web3.utils.fromWei(value)} ${unit}`;\n};\n\nexport const formatCelrValue = value => {\n    return formatCurrencyValue(value, 'CELR');\n};\n","import _ from 'lodash';\nimport web3 from 'web3';\n\nconst { BN } = web3.utils;\n\nexport const BID = 'Bid';\nexport const REVEAL = 'Reveal';\nexport const CLAIM = 'Claim';\nexport const CHALLENGE = 'Challenge';\nexport const FINALIZE = 'Finalize';\nexport const FINALIZED = 'Finalized';\nexport const EXPIRED = 'Expired';\nexport const UNKNOWN = 'Unknown';\n\nexport const getCurrentPeriod = (network, auction, auctionPeriods) => {\n    const blockNumber = _.get(network, 'block.number');\n    const auctionPeriod = _.find(\n        auctionPeriods,\n        auctionPeriod => auctionPeriod.args[0] === auction.args[0]\n    );\n    const {\n        bidEnd,\n        revealEnd,\n        claimEnd,\n        challengeEnd,\n        finalizeEnd,\n        finalized\n    } = _.get(auctionPeriod, 'value', {});\n\n    if (blockNumber < _.toNumber(bidEnd)) {\n        return BID;\n    }\n\n    if (blockNumber < _.toNumber(revealEnd)) {\n        return REVEAL;\n    }\n\n    if (blockNumber < _.toNumber(claimEnd)) {\n        return CLAIM;\n    }\n\n    if (blockNumber < _.toNumber(challengeEnd)) {\n        return CHALLENGE;\n    }\n\n    if (blockNumber < _.toNumber(finalizeEnd)) {\n        return FINALIZE;\n    }\n\n    if (finalized) {\n        return FINALIZED;\n    }\n\n    return EXPIRED;\n};\n\nexport const getWinners = (auction, bids) => {\n    const winners = [];\n    let topLoser;\n    let remainingValue = auction.value.value;\n    bids.sort(compareBid);\n\n    _.forEach(bids, bid => {\n        const [bidder] = bid.args;\n        const { value } = bid.value;\n\n        if (remainingValue < 0) {\n            topLoser = bidder;\n            return false;\n        }\n\n        remainingValue -= value;\n        winners.push(bidder);\n    });\n\n    if (!topLoser) {\n        topLoser = _.last(winners);\n    }\n\n    return { winners, topLoser };\n};\n\nexport const calculateRepay = (bids, winners) => {\n    let result = new BN(0);\n\n    _.forEach(bids, bid => {\n        const [bidder] = bid.args;\n        const { value, rate } = bid.value;\n\n        if (!_.includes(winners, bidder)) {\n            return;\n        }\n\n        result = result.add(new BN(value).muln(100 + parseInt(rate)).divn(100));\n        console.log(rate, result.toString());\n    });\n\n    return result;\n};\n\nconst compareBid = (bid1, bid2) => {\n    const { rate1, celerValue1 } = bid1.value;\n    const { rate2, celerValue2 } = bid2.value;\n\n    if (rate1 !== rate2) {\n        return rate1 - rate2;\n    }\n\n    return celerValue2 - celerValue1;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\nimport {\n    currencyFieldOptions,\n    rateFieldOptions,\n    minValueRule,\n    blockFieldOptions,\n    dayFieldOptions\n} from '../../utils/form';\nimport { getUnitByAddress } from '../../utils/unit';\n\nclass AuctionForm extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = {};\n        this.form = React.createRef();\n        this.contracts = context.drizzle.contracts;\n    }\n\n    handleValueChange = changedValue => this.setState(changedValue);\n\n    handleInitAuction = () => {\n        const { onClose } = this.props;\n\n        this.form.current.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            const {\n                token,\n                bidDuration,\n                revealDuration,\n                claimDuration,\n                challengeDuration,\n                finalizeDuration,\n                value,\n                duration,\n                maxRate,\n                minValue,\n                collateralAddress,\n                collateralValue = 0\n            } = values;\n\n            this.contracts.LiBA.methods.initAuction.cacheSend(\n                token,\n                bidDuration,\n                revealDuration,\n                claimDuration,\n                challengeDuration,\n                finalizeDuration,\n                web3.utils.toWei(value.toString(), 'ether'),\n                duration,\n                maxRate,\n                web3.utils.toWei(minValue.toString(), 'ether'),\n                collateralAddress,\n                web3.utils.toWei(collateralValue.toString(), 'ether')\n            );\n            onClose();\n        });\n    };\n\n    render() {\n        const { visible, network, onClose } = this.props;\n        const supportedTokenOptions = network.supportedTokens.map(\n            supportedToken => [\n                supportedToken.address,\n                `${supportedToken.symbol} (${supportedToken.address})`\n            ]\n        );\n        const unit = getUnitByAddress(\n            network.supportedTokens,\n            this.state.token\n        );\n\n        const formItems = [\n            {\n                name: 'token',\n                field: 'select',\n                fieldOptions: {\n                    options: supportedTokenOptions,\n                    placeholder: 'Token type to borrow'\n                },\n                rules: [\n                    {\n                        message: 'Please select a token!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'value',\n                field: 'number',\n                fieldOptions: {\n                    ...currencyFieldOptions(unit),\n                    placeholder: 'The amount of token to borrow'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a value!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'duration',\n                field: 'number',\n                fieldOptions: {\n                    ...dayFieldOptions,\n                    placeholder: 'The duration of the borrowing'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'maxRate',\n                label: 'Max Rate',\n                field: 'number',\n                fieldOptions: {\n                    ...rateFieldOptions,\n                    step: 0.001,\n                    precision: 3,\n                    placeholder: 'The maximum interest rate'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a max rate!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'minValue',\n                label: 'Min Value',\n                field: 'number',\n                fieldOptions: {\n                    ...currencyFieldOptions(unit),\n                    placeholder: 'The minimum value for bidding'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a min value!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'collateralAddress',\n                label: 'Collateral Address',\n                fieldOptions: {\n                    placeholder: 'The address of collateral token'\n                }\n            },\n            {\n                name: 'collateralValue',\n                label: 'Collateral Value',\n                field: 'number',\n                fieldOptions: {\n                    placeholder: 'The amount of collateral token'\n                },\n                rules: [minValueRule(0)]\n            },\n            {\n                name: 'bidDuration',\n                label: 'Bid Duration',\n                field: 'number',\n                fieldOptions: {\n                    ...blockFieldOptions,\n                    placeholder: 'The duration of bidding period'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'revealDuration',\n                label: 'Reveal Duration',\n                field: 'number',\n                fieldOptions: {\n                    ...blockFieldOptions,\n                    placeholder: 'The duration of revealing period'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'claimDuration',\n                label: 'Claim Duration',\n                field: 'number',\n                fieldOptions: {\n                    ...blockFieldOptions,\n                    placeholder: 'The duration of claiming period'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'challengeDuration',\n                label: 'Challenge Duration',\n                field: 'number',\n                fieldOptions: {\n                    ...blockFieldOptions,\n                    placeholder: 'The duration of challenge period'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'finalizeDuration',\n                label: 'Finalize Duration',\n                field: 'number',\n                fieldOptions: {\n                    ...blockFieldOptions,\n                    placeholder: 'The duration of finalize period'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            }\n        ];\n\n        return (\n            <Modal\n                title=\"Launch Auction\"\n                visible={visible}\n                onOk={this.handleInitAuction}\n                onCancel={onClose}\n            >\n                <Form\n                    ref={this.form}\n                    items={formItems}\n                    onValuesChange={this.handleValueChange}\n                />\n            </Modal>\n        );\n    }\n}\n\nAuctionForm.propTypes = {\n    visible: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nAuctionForm.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nexport default AuctionForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport { Link } from 'dva/router';\nimport { Button, Card, List, Statistic, Row, Col, Icon } from 'antd';\n\nimport AuctionForm from '../components/liba/auction-form';\nimport { getUnitByAddress, formatCurrencyValue } from '../utils/unit';\nimport { getCurrentPeriod } from '../utils/liba';\n\nconst tabList = [\n    {\n        key: 'all',\n        tab: 'All'\n    },\n    {\n        key: 'own',\n        tab: 'Own'\n    },\n    {\n        key: 'bid',\n        tab: 'Bid'\n    }\n];\n\nclass LiBA extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = { isModalVisible: false, tab: 'all' };\n        this.contracts = context.drizzle.contracts;\n    }\n\n    onTabChange = tab => {\n        this.setState({ tab });\n    };\n\n    toggleModal = () => {\n        this.setState(prevState => ({\n            isModalVisible: !prevState.isModalVisible\n        }));\n    };\n\n    renderAuction = auction => {\n        const { network, LiBA } = this.props;\n        const { asker, value, duration, tokenAddress } = auction.value;\n        const unit = getUnitByAddress(network.supportedTokens, tokenAddress);\n\n        return (\n            <List.Item>\n                <Card\n                    actions={[\n                        <Link to={`/auction/${auction.args[0]}`}>\n                            <Icon type=\"eye\" title=\"View Detail\" />\n                        </Link>\n                    ]}\n                >\n                    <Row>\n                        <Col span={12}>\n                            <Statistic title=\"Asker\" value={asker} />\n                        </Col>\n                        <Col span={12}>\n                            <Statistic\n                                title=\"Period\"\n                                value={getCurrentPeriod(\n                                    network,\n                                    auction,\n                                    LiBA.getAuctionPeriod\n                                )}\n                            />\n                        </Col>\n                        <Col span={12}>\n                            <Statistic\n                                title=\"Value\"\n                                value={formatCurrencyValue(value, unit)}\n                            />\n                        </Col>\n                        <Col span={12}>\n                            <Statistic\n                                title=\"Duration\"\n                                value={`${duration} Day`}\n                            />\n                        </Col>\n                    </Row>\n                </Card>\n            </List.Item>\n        );\n    };\n\n    renderAuctions = () => {\n        const { accounts, LiBA } = this.props;\n        const { tab } = this.state;\n\n        let data = _.values(LiBA.getAuction);\n\n        if (tab === 'own') {\n            data = _.filter(\n                data,\n                auction => auction.value.asker === accounts[0]\n            );\n        }\n\n        if (tab === 'bid') {\n            data = _.filter(data, auction =>\n                _.includes(LiBA.bids, auction.args[0])\n            );\n        }\n\n        return (\n            <List\n                grid={{ gutter: 16, column: 3 }}\n                dataSource={data}\n                renderItem={this.renderAuction}\n            />\n        );\n    };\n\n    render() {\n        const { isModalVisible, tab } = this.state;\n        const { network } = this.props;\n\n        return (\n            <Card\n                tabList={tabList}\n                title=\"LiBA\"\n                activeTabKey={tab}\n                onTabChange={this.onTabChange}\n                extra={\n                    <Button type=\"primary\" onClick={this.toggleModal}>\n                        Launch auction\n                    </Button>\n                }\n            >\n                {this.renderAuctions()}\n                <AuctionForm\n                    network={network}\n                    visible={isModalVisible}\n                    onClose={this.toggleModal}\n                />\n            </Card>\n        );\n    }\n}\n\nLiBA.propTypes = {\n    dispatch: PropTypes.func.isRequired\n};\n\nLiBA.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    const { contracts, accounts, LiBA, network } = state;\n\n    return {\n        accounts,\n        network,\n        LiBA: { ...LiBA, ...contracts.LiBA }\n    };\n}\n\nexport default drizzleConnect(LiBA, mapStateToProps);\n"],"sourceRoot":""}