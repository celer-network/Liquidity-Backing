{"version":3,"sources":["utils/constant.js","utils/liba.js","components/filter.js","components/liba/auction-form.js","routes/liba.js"],"names":["EMPTY_ADDRESS","RATE_PRECISION","RATE_BASE","BN","web3","utils","BID","REVEAL","CLAIM","CHALLENGE","FINALIZE","FINALIZED","EXPIRED","ALL_PERIODS","getAuctionPeriod","auctionPeriods","auction","_","find","auctionPeriod","args","getCurrentPeriod","blockNumber","get","bidEnd","revealEnd","claimEnd","challengeEnd","finalizeEnd","finalized","toNumber","getWinners","bids","topLoser","winners","remainingValue","value","sort","compareBid","forEach","bid","bidder","push","last","calculateRepay","result","rate","includes","add","muln","parseInt","divn","console","log","toString","bid1","bid2","rate1","celerValue1","rate2","celerValue2","FormItem","Form","Item","Filter","onChange","props","name","this","allowClear","label","mode","selectProps","omit","className","capitalize","React","PureComponent","defaultProps","disabled","placeholder","AuctionForm","context","handleValueChange","changedValue","setState","handleInitAuction","onClose","form","current","validateFields","err","values","token","bidDuration","revealDuration","claimDuration","challengeDuration","finalizeDuration","duration","maxRate","minValue","collateralAddress","collateralValue","contracts","LiBA","methods","initAuction","cacheSend","toWei","state","createRef","drizzle","visible","network","supportedTokenOptions","supportedTokens","map","supportedToken","address","symbol","unit","getUnitByAddress","formItems","field","fieldOptions","options","rules","message","required","currencyFieldOptions","minValueRule","dayFieldOptions","rateFieldOptions","step","precision","blockFieldOptions","title","onOk","onCancel","ref","items","onValuesChange","Component","contextTypes","PropTypes","object","tabList","key","tab","onTabChange","toggleModal","prevState","isModalVisible","updateFilter","change","filter","renderAuction","asker","tokenAddress","period","actions","to","type","span","formatCurrencyValue","renderFilters","periodOptions","askerOptions","auctions","uniq","style","width","renderAuctions","accounts","getAuction","grid","gutter","column","dataSource","renderItem","activeTabKey","extra","onClick","drizzleConnect"],"mappings":"4IAAA,sGAAO,IAAMA,EAAgB,6CAChBC,EAAiB,EACjBC,EAAS,SAAG,GAAMD,I,geCCvBE,E,OAAOC,EAAKC,MAAZF,GAEKG,EAAM,MACNC,EAAS,SACTC,EAAQ,QACRC,EAAY,YACZC,EAAW,WACXC,EAAY,YACZC,EAAU,UAEVC,EAAc,CAACP,EAAKC,EAAQC,EAAOC,EAAWC,EAAUC,EAAWC,GAEnEE,EAAmB,SAACC,EAAgBC,GAC7C,OAAOC,IAAEC,KACLH,GACA,SAAAI,GAAa,OAAIA,EAAcC,KAAK,KAAOJ,EAAQI,KAAK,OAInDC,EAAmB,SAACF,EAAeG,GAAiB,IAAD,EAQxDL,IAAEM,IAAIJ,EAAe,QAAS,IAN9BK,EAFwD,EAExDA,OACAC,EAHwD,EAGxDA,UACAC,EAJwD,EAIxDA,SACAC,EALwD,EAKxDA,aACAC,EANwD,EAMxDA,YACAC,EAPwD,EAOxDA,UAGJ,OAAIP,EAAcL,IAAEa,SAASN,GAClBlB,EAGPgB,EAAcL,IAAEa,SAASL,GAClBlB,EAGPe,EAAcL,IAAEa,SAASJ,GAClBlB,EAGPc,EAAcL,IAAEa,SAASH,GAClBlB,EAGPa,EAAcL,IAAEa,SAASF,GAClBlB,EAGPmB,EACOlB,EAGJC,GAGEmB,EAAa,SAACf,EAASgB,GAChC,IACIC,EADEC,EAAU,GAEZC,EAAiBnB,EAAQoB,MAAMA,MAoBnC,OAnBAJ,EAAKK,KAAKC,GAEVrB,IAAEsB,QAAQP,GAAM,SAAAQ,GAAQ,IACbC,EADY,YACFD,EAAIpB,KADF,MAEXgB,EAAUI,EAAIJ,MAAdA,MAER,GAAID,EAAiB,EAEjB,OADAF,EAAWQ,GACJ,EAGXN,GAAkBC,EAClBF,EAAQQ,KAAKD,MAGZR,IACDA,EAAWhB,IAAE0B,KAAKT,IAGf,CAAEA,UAASD,aAGTW,EAAiB,SAACZ,EAAME,GACjC,IAAIW,EAAS,IAAI1C,EAAG,GAcpB,OAZAc,IAAEsB,QAAQP,GAAM,SAAAQ,GAAQ,IACbC,EADY,YACFD,EAAIpB,KADF,QAEKoB,EAAIJ,MAApBA,EAFW,EAEXA,MAAOU,EAFI,EAEJA,KAEV7B,IAAE8B,SAASb,EAASO,KAIzBI,EAASA,EAAOG,IAAI,IAAI7C,EAAGiC,GAAOa,KAAK,IAAMC,SAASJ,IAAOK,KAAK,MAClEC,QAAQC,IAAIP,EAAMD,EAAOS,gBAGtBT,GAGLP,EAAa,SAACiB,EAAMC,GAAU,IAAD,EACAD,EAAKnB,MAA5BqB,EADuB,EACvBA,MAAOC,EADgB,EAChBA,YADgB,EAEAF,EAAKpB,MAA5BuB,EAFuB,EAEvBA,MAAOC,EAFgB,EAEhBA,YAEf,OAAIH,IAAUE,EACHF,EAAQE,EAGZC,EAAcF,I,qPCzGnBG,EAAWC,IAAKC,KAEDC,E,2MACjBC,SAAW,SAAA7B,GAAU,IAAD,EACW,EAAK8B,MAAxBC,EADQ,EACRA,KAAMF,EADE,EACFA,SAGVA,EADAE,EACS,eAAGA,EAAO/B,GAIdA,I,wEAGH,IAAD,EAC4CgC,KAAKF,MAA9CG,EADH,EACGA,WAAYC,EADf,EACeA,MAAOH,EADtB,EACsBA,KAAMI,EAD5B,EAC4BA,KAAMnC,EADlC,EACkCA,MACjCoC,EAAW,eACVvD,IAAEwD,KAAKL,KAAKF,MAAO,CAAC,QAAS,OAAQ,cAW5C,MARa,aAATK,GAAwBnC,IACxBoC,EAAYpC,MAAQ,IAGnBmC,GAASF,IACVG,EAAYH,YAAa,GAIzB,kBAACR,EAAD,CACIa,UAAU,kBACVJ,MAAOA,GAASrD,IAAE0D,WAAWR,IAE7B,kBAAC,IAAD,iBAAYK,EAAZ,CAAyBP,SAAUG,KAAKH,iB,GA/BpBW,IAAMC,eAqC1Cb,EAAOc,aAAe,CAClBC,UAAU,EACVT,MAAO,GACPU,YAAa,O,mEChCXC,E,YACF,WAAYf,EAAOgB,GAAU,IAAD,8BACxB,4CAAMhB,KAOViB,kBAAoB,SAAAC,GAAY,OAAI,EAAKC,SAASD,IARtB,EAU5BE,kBAAoB,WAAO,IACfC,EAAY,EAAKrB,MAAjBqB,QAER,EAAKC,KAAKC,QAAQC,gBAAe,SAACC,EAAKC,GACnC,IAAID,EAAJ,CAD8C,IAM1CE,EAYAD,EAZAC,MACAC,EAWAF,EAXAE,YACAC,EAUAH,EAVAG,eACAC,EASAJ,EATAI,cACAC,EAQAL,EARAK,kBACAC,EAOAN,EAPAM,iBACA9D,EAMAwD,EANAxD,MACA+D,EAKAP,EALAO,SACAC,EAIAR,EAJAQ,QACAC,EAGAT,EAHAS,SACAC,EAEAV,EAFAU,kBAhB0C,EAkB1CV,EADAW,uBAjB0C,MAiBxB,EAjBwB,EAoB9C,EAAKC,UAAUC,KAAKC,QAAQC,YAAYC,UACpCf,EACAC,EACAC,EACAC,EACAC,EACAC,EACA9F,IAAKC,MAAMwG,MAAMzE,EAAMkB,WAAY,SACnC6C,EACAC,EAAUlG,IACVE,IAAKC,MAAMwG,MAAMR,EAAS/C,WAAY,SACtCgD,EACAlG,IAAKC,MAAMwG,MAAMN,EAAgBjD,WAAY,UAEjDiC,SA5CJ,EAAKuB,MAAQ,GACb,EAAKtB,KAAOZ,IAAMmC,YAClB,EAAKP,UAAYtB,EAAQ8B,QAAQR,UALT,E,sEAmDlB,IAAD,EACiCpC,KAAKF,MAAnC+C,EADH,EACGA,QAASC,EADZ,EACYA,QAAS3B,EADrB,EACqBA,QACpB4B,EAAwBD,EAAQE,gBAAgBC,KAClD,SAAAC,GAAc,MAAI,CACdA,EAAeC,QADD,UAEXD,EAAeE,OAFJ,aAEeF,EAAeC,QAF9B,SAKhBE,EAAOC,YACTR,EAAQE,gBACRhD,KAAK0C,MAAMjB,OAGT8B,EAAY,CACd,CACIxD,KAAM,QACNyD,MAAO,SACPC,aAAc,CACVC,QAASX,EACTnC,YAAa,wBAEjB+C,MAAO,CACH,CACIC,QAAS,yBACTC,UAAU,KAItB,CACI9D,KAAM,QACNyD,MAAO,SACPC,aAAa,eACNK,YAAqBT,GADhB,CAERzC,YAAa,kCAEjB+C,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,wBACTC,UAAU,KAItB,CACI9D,KAAM,WACNyD,MAAO,SACPC,aAAa,eACNO,IADK,CAERpD,YAAa,kCAEjB+C,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,2BACTC,UAAU,KAItB,CACI9D,KAAM,UACNG,MAAO,WACPsD,MAAO,SACPC,aAAa,eACNQ,IADK,CAERC,KAAM,GACNC,UAAWtI,IACX+E,YAAa,8BAEjB+C,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,2BACTC,UAAU,KAItB,CACI9D,KAAM,WACNG,MAAO,YACPsD,MAAO,SACPC,aAAa,eACNK,YAAqBT,GADhB,CAERzC,YAAa,kCAEjB+C,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,4BACTC,UAAU,KAItB,CACI9D,KAAM,oBACNG,MAAO,qBACPuD,aAAc,CACV7C,YAAa,oCAGrB,CACIb,KAAM,kBACNG,MAAO,mBACPsD,MAAO,SACPC,aAAc,CACV7C,YAAa,kCAEjB+C,MAAO,CAACI,YAAa,KAEzB,CACIhE,KAAM,cACNG,MAAO,eACPsD,MAAO,SACPC,aAAa,eACNW,IADK,CAERxD,YAAa,mCAEjB+C,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,2BACTC,UAAU,KAItB,CACI9D,KAAM,iBACNG,MAAO,kBACPsD,MAAO,SACPC,aAAa,eACNW,IADK,CAERxD,YAAa,qCAEjB+C,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,2BACTC,UAAU,KAItB,CACI9D,KAAM,gBACNG,MAAO,iBACPsD,MAAO,SACPC,aAAa,eACNW,IADK,CAERxD,YAAa,oCAEjB+C,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,2BACTC,UAAU,KAItB,CACI9D,KAAM,oBACNG,MAAO,qBACPsD,MAAO,SACPC,aAAa,eACNW,IADK,CAERxD,YAAa,qCAEjB+C,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,2BACTC,UAAU,KAItB,CACI9D,KAAM,mBACNG,MAAO,oBACPsD,MAAO,SACPC,aAAa,eACNW,IADK,CAERxD,YAAa,oCAEjB+C,MAAO,CACHI,YAAa,GACb,CACIH,QAAS,2BACTC,UAAU,MAM1B,OACI,kBAAC,IAAD,CACIQ,MAAM,iBACNxB,QAASA,EACTyB,KAAMtE,KAAKkB,kBACXqD,SAAUpD,GAEV,kBAAC,IAAD,CACIqD,IAAKxE,KAAKoB,KACVqD,MAAOlB,EACPmB,eAAgB1E,KAAKe,yB,GA5PfP,IAAMmE,WAwQhC9D,EAAY+D,aAAe,CACvBhC,QAASiC,IAAUC,QAGRjE,Q,SChRTkE,EAAU,CACZ,CACIC,IAAK,MACLC,IAAK,OAET,CACID,IAAK,MACLC,IAAK,OAET,CACID,IAAK,MACLC,IAAK,QAIP5C,E,YACF,WAAYvC,EAAOgB,GAAU,IAAD,8BACxB,4CAAMhB,KAMVoF,YAAc,SAAAD,GACV,EAAKhE,SAAS,CAAEgE,SARQ,EAW5BE,YAAc,WACV,EAAKlE,UAAS,SAAAmE,GAAS,MAAK,CACxBC,gBAAiBD,EAAUC,oBAbP,EAiB5BC,aAAe,SAAAC,GACX,EAAKtE,UAAS,SAAAmE,GAAS,MAAK,CACxBI,OAAO,eAAMJ,EAAUI,OAAjB,GAA4BD,QAnBd,EAuB5BE,cAAgB,SAAA7I,GAAY,IAChBkG,EAAY,EAAKhD,MAAjBgD,QADe,EAEkClG,EAAQoB,MAAzD0H,EAFe,EAEfA,MAAO1H,EAFQ,EAERA,MAAO+D,EAFC,EAEDA,SAAU4D,EAFT,EAESA,aAAcC,EAFvB,EAEuBA,OACxCvC,EAAOC,YAAiBR,EAAQE,gBAAiB2C,GAEvD,OACI,kBAAC,IAAKhG,KAAN,KACI,kBAAC,IAAD,CACIkG,QAAS,CACL,kBAAC,OAAD,CAAMC,GAAE,mBAAclJ,EAAQI,KAAK,KAC/B,kBAAC,IAAD,CAAM+I,KAAK,MAAM1B,MAAM,mBAI/B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK2B,KAAM,IACP,kBAAC,IAAD,CAAW3B,MAAM,QAAQrG,MAAO0H,KAEpC,kBAAC,IAAD,CAAKM,KAAM,IACP,kBAAC,IAAD,CAAW3B,MAAM,SAASrG,MAAO4H,KAErC,kBAAC,IAAD,CAAKI,KAAM,IACP,kBAAC,IAAD,CACI3B,MAAM,QACNrG,MAAOiI,YAAoBjI,EAAOqF,MAG1C,kBAAC,IAAD,CAAK2C,KAAM,IACP,kBAAC,IAAD,CACI3B,MAAM,WACNrG,MAAK,UAAK+D,EAAL,eArDL,EA8D5BmE,cAAgB,WACZ,IAAMC,EAAgB1J,IAAYwG,KAAI,SAAA2C,GAAM,MAAI,CAACA,EAAQA,MACnDQ,EAAevJ,IAAE,EAAKwJ,UACvBpD,KAAI,SAAArG,GAAO,OAAIA,EAAQoB,MAAM0H,SAC7BY,OACArD,KAAI,SAAAyC,GAAK,MAAI,CAACA,EAAOA,MACrB1H,QAEL,OACI,oCACI,kBAAC,EAAD,CACI+B,KAAK,SACL2D,QAASyC,EACTI,MAAO,CAAEC,MAAO,KAChB3G,SAAU,EAAKyF,aACfrF,YAAU,IAEd,kBAAC,EAAD,CACIF,KAAK,QACL2D,QAAS0C,EACTG,MAAO,CAAEC,MAAO,KAChB3G,SAAU,EAAKyF,aACfrF,YAAU,MApFE,EA0F5BwG,eAAiB,WAAO,IAAD,EACiB,EAAK3G,MAAjC4G,EADW,EACXA,SAAUrE,EADC,EACDA,KAAMS,EADL,EACKA,QADL,EAEK,EAAKJ,MAArBuC,EAFW,EAEXA,IAAKO,EAFM,EAENA,OAETa,EAAWxJ,IAAE2E,OAAOa,EAAKsE,YAmC7B,MAjCY,QAAR1B,IACAoB,EAAWxJ,IAAE2I,OACTa,GACA,SAAAzJ,GAAO,OAAIA,EAAQoB,MAAM0H,QAAUgB,EAAS,OAIxC,QAARzB,IACAoB,EAAWxJ,IAAE2I,OAAOa,GAAU,SAAAzJ,GAAO,OACjCC,IAAE8B,SAAS0D,EAAKzE,KAAMhB,EAAQI,KAAK,QAI3CqJ,EAAWxJ,IAAE2I,OAAOa,GAAU,SAAAzJ,GAAY,IAC9B8I,EAAU9I,EAAQoB,MAAlB0H,MACR,GAAIF,EAAOE,OAASF,EAAOE,QAAUA,EACjC,OAAO,EAGX,IAAME,EAAS3I,YACXP,YAAiB2F,EAAK3F,iBAAkBE,GACxCC,IAAEM,IAAI2F,EAAS,iBAGnB,QAAI0C,EAAOI,QAAUJ,EAAOI,SAAWA,KAIvChJ,EAAQoB,MAAM4H,OAASA,GAChB,MAEX,EAAKS,SAAWA,EAGZ,kBAAC,IAAD,CACIO,KAAM,CAAEC,OAAQ,GAAIC,OAAQ,GAC5BC,WAAYV,EACZW,WAAY,EAAKvB,iBAlIzB,EAAK/C,MAAQ,CAAE2C,gBAAgB,EAAOJ,IAAK,MAAOO,OAAQ,IAC1D,EAAKpD,UAAYtB,EAAQ8B,QAAQR,UAJT,E,sEA0IlB,IAAD,EAC2BpC,KAAK0C,MAA7B2C,EADH,EACGA,eAAgBJ,EADnB,EACmBA,IAChBnC,EAAY9C,KAAKF,MAAjBgD,QAER,OACI,kBAAC,IAAD,CACIiC,QAASA,EACTV,MAAM,WACN4C,aAAchC,EACdC,YAAalF,KAAKkF,YAClBgC,MACI,kBAAC,IAAD,CAAQnB,KAAK,UAAUoB,QAASnH,KAAKmF,aAArC,mBAKHnF,KAAKkG,gBACLlG,KAAKyG,iBACN,kBAAC,EAAD,CACI3D,QAASA,EACTD,QAASwC,EACTlE,QAASnB,KAAKmF,mB,GAhKf3E,IAAMmE,WA2KzBtC,EAAKuC,aAAe,CAChBhC,QAASiC,IAAUC,QAaRsC,mCAAe/E,GAV9B,SAAyBK,GAAQ,IACrBN,EAAuCM,EAAvCN,UAAWsE,EAA4BhE,EAA5BgE,SAAUrE,EAAkBK,EAAlBL,KAE7B,MAAO,CACHqE,WACA5D,QAJ2CJ,EAAZI,QAK/BT,KAAK,eAAMA,EAAP,GAAgBD,EAAUC","file":"static/js/6.30e473ef.chunk.js","sourcesContent":["export const EMPTY_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const RATE_PRECISION = 3;\nexport const RATE_BASE = 10 ** RATE_PRECISION;\n","import _ from 'lodash';\nimport web3 from 'web3';\n\nconst { BN } = web3.utils;\n\nexport const BID = 'Bid';\nexport const REVEAL = 'Reveal';\nexport const CLAIM = 'Claim';\nexport const CHALLENGE = 'Challenge';\nexport const FINALIZE = 'Finalize';\nexport const FINALIZED = 'Finalized';\nexport const EXPIRED = 'Expired';\nexport const UNKNOWN = 'Unknown';\nexport const ALL_PERIODS = [BID, REVEAL, CLAIM, CHALLENGE, FINALIZE, FINALIZED, EXPIRED];\n\nexport const getAuctionPeriod = (auctionPeriods, auction) => {\n    return _.find(\n        auctionPeriods,\n        auctionPeriod => auctionPeriod.args[0] === auction.args[0]\n    );\n}\n\nexport const getCurrentPeriod = (auctionPeriod, blockNumber) => {\n    const {\n        bidEnd,\n        revealEnd,\n        claimEnd,\n        challengeEnd,\n        finalizeEnd,\n        finalized\n    } = _.get(auctionPeriod, 'value', {});\n\n    if (blockNumber < _.toNumber(bidEnd)) {\n        return BID;\n    }\n\n    if (blockNumber < _.toNumber(revealEnd)) {\n        return REVEAL;\n    }\n\n    if (blockNumber < _.toNumber(claimEnd)) {\n        return CLAIM;\n    }\n\n    if (blockNumber < _.toNumber(challengeEnd)) {\n        return CHALLENGE;\n    }\n\n    if (blockNumber < _.toNumber(finalizeEnd)) {\n        return FINALIZE;\n    }\n\n    if (finalized) {\n        return FINALIZED;\n    }\n\n    return EXPIRED;\n};\n\nexport const getWinners = (auction, bids) => {\n    const winners = [];\n    let topLoser;\n    let remainingValue = auction.value.value;\n    bids.sort(compareBid);\n\n    _.forEach(bids, bid => {\n        const [bidder] = bid.args;\n        const { value } = bid.value;\n\n        if (remainingValue < 0) {\n            topLoser = bidder;\n            return false;\n        }\n\n        remainingValue -= value;\n        winners.push(bidder);\n    });\n\n    if (!topLoser) {\n        topLoser = _.last(winners);\n    }\n\n    return { winners, topLoser };\n};\n\nexport const calculateRepay = (bids, winners) => {\n    let result = new BN(0);\n\n    _.forEach(bids, bid => {\n        const [bidder] = bid.args;\n        const { value, rate } = bid.value;\n\n        if (!_.includes(winners, bidder)) {\n            return;\n        }\n\n        result = result.add(new BN(value).muln(100 + parseInt(rate)).divn(100));\n        console.log(rate, result.toString());\n    });\n\n    return result;\n};\n\nconst compareBid = (bid1, bid2) => {\n    const { rate1, celerValue1 } = bid1.value;\n    const { rate2, celerValue2 } = bid2.value;\n\n    if (rate1 !== rate2) {\n        return rate1 - rate2;\n    }\n\n    return celerValue2 - celerValue1;\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport { Form } from 'antd';\n\nimport Select from './select';\n\nconst FormItem = Form.Item;\n\nexport default class Filter extends React.PureComponent {\n    onChange = value => {\n        const { name, onChange } = this.props;\n\n        if (name) {\n            onChange({ [name]: value });\n            return;\n        }\n\n        onChange(value);\n    };\n\n    render() {\n        const { allowClear, label, name, mode, value } = this.props;\n        const selectProps = {\n            ..._.omit(this.props, ['label', 'name', 'onChange'])\n        };\n\n        if (mode === 'multiple' && !value) {\n            selectProps.value = [];\n        }\n\n        if (!mode && !allowClear) {\n            selectProps.allowClear = false;\n        }\n\n        return (\n            <FormItem\n                className=\"dropdown-filter\"\n                label={label || _.capitalize(name)}\n            >\n                <Select {...selectProps} onChange={this.onChange} />\n            </FormItem>\n        );\n    }\n}\n\nFilter.defaultProps = {\n    disabled: false,\n    label: '',\n    placeholder: 'all'\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\nimport {\n    currencyFieldOptions,\n    rateFieldOptions,\n    minValueRule,\n    blockFieldOptions,\n    dayFieldOptions\n} from '../../utils/form';\nimport { getUnitByAddress } from '../../utils/unit';\nimport { RATE_PRECISION, RATE_BASE } from '../../utils/constant';\n\nclass AuctionForm extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = {};\n        this.form = React.createRef();\n        this.contracts = context.drizzle.contracts;\n    }\n\n    handleValueChange = changedValue => this.setState(changedValue);\n\n    handleInitAuction = () => {\n        const { onClose } = this.props;\n\n        this.form.current.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            const {\n                token,\n                bidDuration,\n                revealDuration,\n                claimDuration,\n                challengeDuration,\n                finalizeDuration,\n                value,\n                duration,\n                maxRate,\n                minValue,\n                collateralAddress,\n                collateralValue = 0\n            } = values;\n\n            this.contracts.LiBA.methods.initAuction.cacheSend(\n                token,\n                bidDuration,\n                revealDuration,\n                claimDuration,\n                challengeDuration,\n                finalizeDuration,\n                web3.utils.toWei(value.toString(), 'ether'),\n                duration,\n                maxRate * RATE_BASE,\n                web3.utils.toWei(minValue.toString(), 'ether'),\n                collateralAddress,\n                web3.utils.toWei(collateralValue.toString(), 'ether')\n            );\n            onClose();\n        });\n    };\n\n    render() {\n        const { visible, network, onClose } = this.props;\n        const supportedTokenOptions = network.supportedTokens.map(\n            supportedToken => [\n                supportedToken.address,\n                `${supportedToken.symbol} (${supportedToken.address})`\n            ]\n        );\n        const unit = getUnitByAddress(\n            network.supportedTokens,\n            this.state.token\n        );\n\n        const formItems = [\n            {\n                name: 'token',\n                field: 'select',\n                fieldOptions: {\n                    options: supportedTokenOptions,\n                    placeholder: 'Token type to borrow'\n                },\n                rules: [\n                    {\n                        message: 'Please select a token!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'value',\n                field: 'number',\n                fieldOptions: {\n                    ...currencyFieldOptions(unit),\n                    placeholder: 'The amount of token to borrow'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a value!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'duration',\n                field: 'number',\n                fieldOptions: {\n                    ...dayFieldOptions,\n                    placeholder: 'The duration of the borrowing'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'maxRate',\n                label: 'Max Rate',\n                field: 'number',\n                fieldOptions: {\n                    ...rateFieldOptions,\n                    step: 0.1,\n                    precision: RATE_PRECISION,\n                    placeholder: 'The maximum interest rate'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a max rate!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'minValue',\n                label: 'Min Value',\n                field: 'number',\n                fieldOptions: {\n                    ...currencyFieldOptions(unit),\n                    placeholder: 'The minimum value for bidding'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a min value!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'collateralAddress',\n                label: 'Collateral Address',\n                fieldOptions: {\n                    placeholder: 'The address of collateral token'\n                }\n            },\n            {\n                name: 'collateralValue',\n                label: 'Collateral Value',\n                field: 'number',\n                fieldOptions: {\n                    placeholder: 'The amount of collateral token'\n                },\n                rules: [minValueRule(0)]\n            },\n            {\n                name: 'bidDuration',\n                label: 'Bid Duration',\n                field: 'number',\n                fieldOptions: {\n                    ...blockFieldOptions,\n                    placeholder: 'The duration of bidding period'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'revealDuration',\n                label: 'Reveal Duration',\n                field: 'number',\n                fieldOptions: {\n                    ...blockFieldOptions,\n                    placeholder: 'The duration of revealing period'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'claimDuration',\n                label: 'Claim Duration',\n                field: 'number',\n                fieldOptions: {\n                    ...blockFieldOptions,\n                    placeholder: 'The duration of claiming period'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'challengeDuration',\n                label: 'Challenge Duration',\n                field: 'number',\n                fieldOptions: {\n                    ...blockFieldOptions,\n                    placeholder: 'The duration of challenge period'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'finalizeDuration',\n                label: 'Finalize Duration',\n                field: 'number',\n                fieldOptions: {\n                    ...blockFieldOptions,\n                    placeholder: 'The duration of finalize period'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            }\n        ];\n\n        return (\n            <Modal\n                title=\"Launch Auction\"\n                visible={visible}\n                onOk={this.handleInitAuction}\n                onCancel={onClose}\n            >\n                <Form\n                    ref={this.form}\n                    items={formItems}\n                    onValuesChange={this.handleValueChange}\n                />\n            </Modal>\n        );\n    }\n}\n\nAuctionForm.propTypes = {\n    visible: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nAuctionForm.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nexport default AuctionForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport { Link } from 'dva/router';\nimport { Button, Card, List, Statistic, Row, Col, Icon } from 'antd';\n\nimport Filter from '../components/filter';\nimport AuctionForm from '../components/liba/auction-form';\nimport { getUnitByAddress, formatCurrencyValue } from '../utils/unit';\nimport { getAuctionPeriod, getCurrentPeriod, ALL_PERIODS } from '../utils/liba';\n\nconst tabList = [\n    {\n        key: 'all',\n        tab: 'All'\n    },\n    {\n        key: 'own',\n        tab: 'Own'\n    },\n    {\n        key: 'bid',\n        tab: 'Bid'\n    }\n];\n\nclass LiBA extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = { isModalVisible: false, tab: 'all', filter: {} };\n        this.contracts = context.drizzle.contracts;\n    }\n\n    onTabChange = tab => {\n        this.setState({ tab });\n    };\n\n    toggleModal = () => {\n        this.setState(prevState => ({\n            isModalVisible: !prevState.isModalVisible\n        }));\n    };\n\n    updateFilter = change => {\n        this.setState(prevState => ({\n            filter: { ...prevState.filter, ...change }\n        }));\n    };\n\n    renderAuction = auction => {\n        const { network } = this.props;\n        const { asker, value, duration, tokenAddress, period } = auction.value;\n        const unit = getUnitByAddress(network.supportedTokens, tokenAddress);\n\n        return (\n            <List.Item>\n                <Card\n                    actions={[\n                        <Link to={`/auction/${auction.args[0]}`}>\n                            <Icon type=\"eye\" title=\"View Detail\" />\n                        </Link>\n                    ]}\n                >\n                    <Row>\n                        <Col span={12}>\n                            <Statistic title=\"Asker\" value={asker} />\n                        </Col>\n                        <Col span={12}>\n                            <Statistic title=\"Period\" value={period} />\n                        </Col>\n                        <Col span={12}>\n                            <Statistic\n                                title=\"Value\"\n                                value={formatCurrencyValue(value, unit)}\n                            />\n                        </Col>\n                        <Col span={12}>\n                            <Statistic\n                                title=\"Duration\"\n                                value={`${duration} Day`}\n                            />\n                        </Col>\n                    </Row>\n                </Card>\n            </List.Item>\n        );\n    };\n\n    renderFilters = () => {\n        const periodOptions = ALL_PERIODS.map(period => [period, period]);\n        const askerOptions = _(this.auctions)\n            .map(auction => auction.value.asker)\n            .uniq()\n            .map(asker => [asker, asker])\n            .value();\n\n        return (\n            <>\n                <Filter\n                    name=\"period\"\n                    options={periodOptions}\n                    style={{ width: 100 }}\n                    onChange={this.updateFilter}\n                    allowClear\n                />\n                <Filter\n                    name=\"asker\"\n                    options={askerOptions}\n                    style={{ width: 200 }}\n                    onChange={this.updateFilter}\n                    allowClear\n                />\n            </>\n        );\n    };\n\n    renderAuctions = () => {\n        const { accounts, LiBA, network } = this.props;\n        const { tab, filter } = this.state;\n\n        let auctions = _.values(LiBA.getAuction);\n\n        if (tab === 'own') {\n            auctions = _.filter(\n                auctions,\n                auction => auction.value.asker === accounts[0]\n            );\n        }\n\n        if (tab === 'bid') {\n            auctions = _.filter(auctions, auction =>\n                _.includes(LiBA.bids, auction.args[0])\n            );\n        }\n\n        auctions = _.filter(auctions, auction => {\n            const { asker } = auction.value;\n            if (filter.asker && filter.asker !== asker) {\n                return false;\n            }\n\n            const period = getCurrentPeriod(\n                getAuctionPeriod(LiBA.getAuctionPeriod, auction),\n                _.get(network, 'block.number')\n            );\n\n            if (filter.period && filter.period !== period) {\n                return false;\n            }\n\n            auction.value.period = period;\n            return true;\n        });\n        this.auctions = auctions;\n\n        return (\n            <List\n                grid={{ gutter: 16, column: 3 }}\n                dataSource={auctions}\n                renderItem={this.renderAuction}\n            />\n        );\n    };\n\n    render() {\n        const { isModalVisible, tab } = this.state;\n        const { network } = this.props;\n\n        return (\n            <Card\n                tabList={tabList}\n                title=\"Auctions\"\n                activeTabKey={tab}\n                onTabChange={this.onTabChange}\n                extra={\n                    <Button type=\"primary\" onClick={this.toggleModal}>\n                        Launch auction\n                    </Button>\n                }\n            >\n                {this.renderFilters()}\n                {this.renderAuctions()}\n                <AuctionForm\n                    network={network}\n                    visible={isModalVisible}\n                    onClose={this.toggleModal}\n                />\n            </Card>\n        );\n    }\n}\n\nLiBA.propTypes = {\n    dispatch: PropTypes.func.isRequired\n};\n\nLiBA.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    const { contracts, accounts, LiBA, network } = state;\n\n    return {\n        accounts,\n        network,\n        LiBA: { ...LiBA, ...contracts.LiBA }\n    };\n}\n\nexport default drizzleConnect(LiBA, mapStateToProps);\n"],"sourceRoot":""}