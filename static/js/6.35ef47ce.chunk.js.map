{"version":3,"sources":["utils/unit.js","utils/form.js","components/select.js","components/form.js","utils/liba.js","components/liba/auction-form.js","routes/liba.js"],"names":["__webpack_require__","d","__webpack_exports__","getUnitByAddress","formatCurrencyValue","formatEthValue","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","n","web3__WEBPACK_IMPORTED_MODULE_1__","web3__WEBPACK_IMPORTED_MODULE_1___default","supportedTokens","address","token","_","find","supportedToken","symbol","value","unit","toNumber","concat","web3","utils","fromWei","etherFieldOptions","currencyFieldOptions","dayFieldOptions","blockFieldOptions","minValueRule","formatter","parser","replace","minValue","validator","rule","callback","Option","Select","defaultProps","allowClear","disabled","optionFilterProp","placeholder","state","undefined","onChange","_this","setState","getValue","defaultValue","props","renderOptions","options","map","_ref","_ref2","Object","slicedToArray","text","react_default","a","createElement","key","this","objectSpread","omit","isNil","es_select","assign","showSearch","React","Component","FormItem","Form","Item","buttonLayout","wrapperCol","sm","span","offset","xs","FIELD_MAP","date","DatePicker","input","Input","number","InputNumber","TextArea","select","CustomizeForm","handleSubmit","e","_this$props","form","onSubmit","preventDefault","validateFields","err","values","renderFormItems","_this$props2","formItemLayout","items","getFieldDecorator","item","_item$field","field","fieldOptions","initialValue","label","name","rules","Field","decoratorOptions","getValueFromEvent","_len2","arguments","length","args","Array","_key2","fileList","target","type","checked","capitalize","_this$props3","submitText","es_form","noop","es_button","htmlType","labelCol","create","onValuesChange","changedValues","BID","REVEAL","CLAIM","CHALLENGE","FINALIZE","FINALIZED","EXPIRED","getCurrentPeriod","getWinners","network","auction","auctionPeriods","blockNumber","get","auctionPeriod","_$get","bidEnd","revealEnd","claimEnd","challengeEnd","finalizeEnd","finalized","compareBid","bid1","bid2","_bid1$value","rate1","celerValue1","_bid2$value","rate2","celerValue2","bids","result","remainingValue","sort","forEach","bid","bidder","push","AuctionForm","context","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleValueChange","changedValue","handleInitAuction","onClose","current","bidDuration","revealDuration","claimDuration","challengeDuration","finalizeDuration","duration","maxRate","collateralAddress","_values$collateralVal","collateralValue","contracts","LiBA","methods","initAuction","cacheSend","toWei","toString","createRef","drizzle","visible","formItems","message","required","modal","title","onOk","onCancel","components_form","ref","contextTypes","PropTypes","object","tabList","tab","onTabChange","toggleModal","prevState","isModalVisible","renderAuction","_auction$value","asker","list","card","actions","router","to","icon","row","col","statistic","getAuctionPeriod","renderAuctions","accounts","data","getAuction","filter","includes","grid","gutter","column","dataSource","renderItem","_this$state","activeTabKey","extra","onClick","auction_form","drizzleConnect"],"mappings":"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","file":"static/js/6.35ef47ce.chunk.js","sourcesContent":["import _ from 'lodash';\nimport web3 from 'web3';\n\nimport './network';\n\nexport const getUnitByAddress = (supportedTokens, address) => {\n    const token = _.find(\n        supportedTokens,\n        supportedToken => supportedToken.address === address\n    );\n\n    if (!token) {\n        return '';\n    }\n    return token.symbol;\n};\n\nexport const formatCurrencyValue = (value, unit) => {\n    const num = _.toNumber(value);\n\n    if (num < 100000) {\n        return `${value} wei`;\n    }\n\n    return `${web3.utils.fromWei(value)} ${unit}`;\n};\n\nexport const formatEthValue = value => {\n    const num = _.toNumber(value);\n\n    if (num < 100000) {\n        return `${value} wei`;\n    }\n\n    return `${web3.utils.fromWei(value)} ether`;\n};\n","export const etherFieldOptions = {\n    formatter: value => (value ? `${value}ether` : ''),\n    parser: value => value.replace(/[a-z]/g, '')\n};\n\nexport const currencyFieldOptions = unit => ({\n    formatter: value => (value ? `${value}${unit}` : ''),\n    parser: value => value.replace(/[A-Z]/g, '')\n});\n\nexport const dayFieldOptions = {\n    formatter: value => (value ? `${value}day` : ''),\n    parser: value => value.replace(/[a-z]/g, '')\n};\n\nexport const blockFieldOptions = {\n    formatter: value => (value ? `${value}block` : ''),\n    parser: value => value.replace(/[a-z]/g, '')\n};\n\nexport const minValueRule = minValue => ({\n    validator: (rule, value, callback) => {\n        if (value < minValue) {\n            const msg = `value is smaller than ${minValue}`;\n            callback(msg);\n        }\n\n        callback();\n    }\n});\n","import React from 'react';\nimport { Select } from 'antd';\nimport _ from 'lodash';\n\nconst Option = Select.Option;\n\nexport default class extends React.Component {\n    defaultProps = {\n        allowClear: true,\n        disabled: false,\n        optionFilterProp: 'children',\n        placeholder: ''\n    };\n\n    state = { value: undefined };\n\n    onChange = (value: ValueType) => this.setState({ value });\n\n    getValue = () => {\n        const { defaultValue } = this.props;\n        const { value } = this.state;\n        return value || defaultValue;\n    };\n\n    renderOptions = () => {\n        const { options } = this.props;\n        return _.map(options, ([value, text]) => (\n            <Option key={value} value={value}>\n                {text}\n            </Option>\n        ));\n    };\n\n    render() {\n        const { defaultValue } = this.props;\n        const props = {\n            ..._.omit(this.props, ['options', 'defaultValue'])\n        };\n\n        if (!props.onChange) {\n            props.onChange = this.onChange;\n        }\n        if (!_.isNil(defaultValue)) {\n            props.defaultValue = defaultValue;\n        }\n\n        return (\n            <Select {...props} showSearch={true}>\n                {this.renderOptions()}\n            </Select>\n        );\n    }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { Button, DatePicker, Form, Input, InputNumber } from 'antd';\n\nimport Select from './select';\n\nconst FormItem = Form.Item;\n\nconst defaultFormItemLayout = {\n    labelCol: {\n        sm: { span: 8 },\n        xs: { span: 24 }\n    },\n\n    wrapperCol: {\n        sm: { span: 16 },\n        xs: { span: 24 }\n    }\n};\n\nconst buttonLayout = {\n    wrapperCol: {\n        sm: { span: 3, offset: 21 },\n        xs: { span: 24 }\n    }\n};\n\nconst FIELD_MAP = {\n    date: DatePicker,\n    input: Input,\n    number: InputNumber,\n    text: Input.TextArea,\n    select: Select\n};\n\nclass CustomizeForm extends React.Component {\n    handleSubmit = e => {\n        const { form, onSubmit } = this.props;\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                onSubmit(values);\n            }\n        });\n    };\n\n    renderFormItems = () => {\n        const { form, formItemLayout, items } = this.props;\n        const { getFieldDecorator } = form;\n\n        return _.map(items, item => {\n            const {\n                field = 'input',\n                fieldOptions,\n                initialValue,\n                label,\n                name,\n                rules\n            } = item;\n            const Field = FIELD_MAP[field];\n            const decoratorOptions = {\n                initialValue,\n                rules,\n                getValueFromEvent(...args) {\n                    if (field === 'file') {\n                        return args[0].fileList;\n                    }\n\n                    const [e] = args;\n                    if (!e || !e.target) {\n                        return e;\n                    }\n\n                    const { target } = e;\n                    return target.type === 'checkbox'\n                        ? target.checked\n                        : target.value;\n                }\n            };\n\n            return (\n                <FormItem\n                    key={name}\n                    {...formItemLayout}\n                    label={!label ? _.capitalize(name) : label}\n                >\n                    {getFieldDecorator(name, decoratorOptions)(\n                        <Field {...fieldOptions} />\n                    )}\n                </FormItem>\n            );\n        });\n    };\n\n    render() {\n        const { onSubmit, submitText } = this.props;\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                {this.renderFormItems()}\n                {onSubmit !== _.noop && (\n                    <FormItem {...buttonLayout}>\n                        <Button htmlType=\"submit\" type=\"primary\">\n                            {submitText}\n                        </Button>\n                    </FormItem>\n                )}\n            </Form>\n        );\n    }\n}\n\nCustomizeForm.defaultProps = {\n    formItemLayout: defaultFormItemLayout,\n    onSubmit: _.noop,\n    submitText: 'Save'\n};\n\nexport default Form.create({\n    onValuesChange(props, changedValues) {\n        if (props.onValuesChange) {\n            props.onValuesChange(changedValues);\n        }\n    }\n})(CustomizeForm);\n","import _ from 'lodash';\n\nexport const BID = 'Bid';\nexport const REVEAL = 'Reveal';\nexport const CLAIM = 'Claim';\nexport const CHALLENGE = 'Challenge';\nexport const FINALIZE = 'Finalize';\nexport const FINALIZED = 'Finalized';\nexport const EXPIRED = 'Expired';\nexport const UNKNOWN = 'Unknown';\n\nexport const getCurrentPeriod = (network, auction, auctionPeriods) => {\n    const blockNumber = _.get(network, 'block.number');\n    const auctionPeriod = _.find(\n        auctionPeriods,\n        auctionPeriod => auctionPeriod.args[0] === auction.args[0]\n    );\n    const {\n        bidEnd,\n        revealEnd,\n        claimEnd,\n        challengeEnd,\n        finalizeEnd,\n        finalized\n    } = _.get(auctionPeriod, 'value', {});\n\n    if (blockNumber < _.toNumber(bidEnd)) {\n        return BID;\n    }\n\n    if (blockNumber < _.toNumber(revealEnd)) {\n        return REVEAL;\n    }\n\n    if (blockNumber < _.toNumber(claimEnd)) {\n        return CLAIM;\n    }\n\n    if (blockNumber < _.toNumber(challengeEnd)) {\n        return CHALLENGE;\n    }\n\n    if (blockNumber < _.toNumber(finalizeEnd)) {\n        return FINALIZE;\n    }\n\n    if (finalized) {\n        return FINALIZED;\n    }\n\n    return EXPIRED;\n};\n\nconst compareBid = (bid1, bid2) => {\n    const { rate1, celerValue1 } = bid1.value;\n    const { rate2, celerValue2 } = bid2.value;\n\n    if (rate1 !== rate2) {\n        return rate1 - rate2;\n    }\n\n    return celerValue2 - celerValue1;\n};\n\nexport const getWinners = (auction, bids) => {\n    const result = [];\n    let remainingValue = auction.value.value;\n    bids.sort(compareBid);\n\n    _.forEach(bids, bid => {\n        const bidder = bid.args[0];\n        const { value } = bid.value;\n\n        remainingValue -= value;\n        result.push(bidder);\n\n        if (remainingValue < 0) {\n            return false;\n        }\n    });\n\n    return result;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\nimport {\n    currencyFieldOptions,\n    minValueRule,\n    blockFieldOptions\n} from '../../utils/form';\nimport { getUnitByAddress } from '../../utils/unit';\n\nclass AuctionForm extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = {};\n        this.form = React.createRef();\n        this.contracts = context.drizzle.contracts;\n    }\n\n    handleValueChange = changedValue => this.setState(changedValue);\n\n    handleInitAuction = () => {\n        const { onClose } = this.props;\n\n        this.form.current.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            const {\n                token,\n                bidDuration,\n                revealDuration,\n                claimDuration,\n                challengeDuration,\n                finalizeDuration,\n                value,\n                duration,\n                maxRate,\n                minValue,\n                collateralAddress,\n                collateralValue = 0\n            } = values;\n\n            this.contracts.LiBA.methods.initAuction.cacheSend(\n                token,\n                bidDuration,\n                revealDuration,\n                claimDuration,\n                challengeDuration,\n                finalizeDuration,\n                web3.utils.toWei(value.toString(), 'ether'),\n                duration,\n                maxRate,\n                web3.utils.toWei(minValue.toString(), 'ether'),\n                collateralAddress,\n                web3.utils.toWei(collateralValue.toString(), 'ether')\n            );\n            onClose();\n        });\n    };\n\n    render() {\n        const { visible, network, onClose } = this.props;\n        const supportedTokenOptions = network.supportedTokens.map(\n            supportedToken => [\n                supportedToken.address,\n                `${supportedToken.symbol} (${supportedToken.address})`\n            ]\n        );\n\n        const formItems = [\n            {\n                name: 'token',\n                field: 'select',\n                fieldOptions: {\n                    options: supportedTokenOptions\n                },\n                rules: [\n                    {\n                        message: 'Please select a token!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'value',\n                field: 'number',\n                fieldOptions: currencyFieldOptions(\n                    getUnitByAddress(network.supportedTokens, this.state.token)\n                ),\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a value!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'maxRate',\n                label: 'Max Rate',\n                field: 'number',\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a max rate!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'minValue',\n                label: 'Min Value',\n                field: 'number',\n                fieldOptions: currencyFieldOptions(\n                    getUnitByAddress(network.supportedTokens, this.state.token)\n                ),\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a min value!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'duration',\n                field: 'number',\n                fieldOptions: blockFieldOptions,\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'collateralAddress',\n                label: 'Collateral Address'\n            },\n            {\n                name: 'collateralValue',\n                label: 'Collateral Value',\n                field: 'number',\n                rules: [minValueRule(0)]\n            },\n            {\n                name: 'bidDuration',\n                label: 'Bid Duration',\n                field: 'number',\n                fieldOptions: blockFieldOptions,\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'revealDuration',\n                label: 'Reveal Duration',\n                field: 'number',\n                fieldOptions: blockFieldOptions,\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'claimDuration',\n                label: 'Claim Duration',\n                field: 'number',\n                fieldOptions: blockFieldOptions,\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'challengeDuration',\n                label: 'Challenge Duration',\n                field: 'number',\n                fieldOptions: blockFieldOptions,\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'finalizeDuration',\n                label: 'Finalize Duration',\n                field: 'number',\n                fieldOptions: blockFieldOptions,\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            }\n        ];\n\n        return (\n            <Modal\n                title=\"Launch Auction\"\n                visible={visible}\n                onOk={this.handleInitAuction}\n                onCancel={onClose}\n            >\n                <Form\n                    ref={this.form}\n                    items={formItems}\n                    onValuesChange={this.handleValueChange}\n                />\n            </Modal>\n        );\n    }\n}\n\nAuctionForm.propTypes = {\n    visible: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nAuctionForm.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nexport default AuctionForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport { Link } from 'dva/router';\nimport { Button, Card, List, Statistic, Row, Col, Icon } from 'antd';\n\nimport AuctionForm from '../components/liba/auction-form';\nimport { formatEthValue } from '../utils/unit';\nimport { getCurrentPeriod } from '../utils/liba';\n\nconst tabList = [\n    {\n        key: 'all',\n        tab: 'All'\n    },\n    {\n        key: 'own',\n        tab: 'Own'\n    },\n    {\n        key: 'bid',\n        tab: 'Bid'\n    }\n];\n\nclass LiBA extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = { isModalVisible: false, tab: 'all' };\n        this.contracts = context.drizzle.contracts;\n    }\n\n    onTabChange = tab => {\n        this.setState({ tab });\n    };\n\n    toggleModal = () => {\n        this.setState(prevState => ({\n            isModalVisible: !prevState.isModalVisible\n        }));\n    };\n\n    renderAuction = auction => {\n        const { network } = this.props;\n        const { asker, value, duration } = auction.value;\n        const { LiBA } = this.props;\n\n        return (\n            <List.Item>\n                <Card\n                    actions={[\n                        <Link to={`/auction/${auction.args[0]}`}>\n                            <Icon type=\"eye\" title=\"View Detail\" />\n                        </Link>\n                    ]}\n                >\n                    <Row>\n                        <Col span={12}>\n                            <Statistic title=\"Asker\" value={asker} />\n                        </Col>\n                        <Col span={12}>\n                            <Statistic\n                                title=\"Period\"\n                                value={getCurrentPeriod(\n                                    network,\n                                    auction,\n                                    LiBA.getAuctionPeriod\n                                )}\n                            />\n                        </Col>\n                        <Col span={12}>\n                            <Statistic\n                                title=\"Value\"\n                                value={formatEthValue(value)}\n                            />\n                        </Col>\n                        <Col span={12}>\n                            <Statistic\n                                title=\"Duration\"\n                                value={`${duration} Days`}\n                            />\n                        </Col>\n                    </Row>\n                </Card>\n            </List.Item>\n        );\n    };\n\n    renderAuctions = () => {\n        const { accounts, LiBA } = this.props;\n        const { tab } = this.state;\n\n        let data = _.values(LiBA.getAuction);\n\n        if (tab === 'own') {\n            data = _.filter(\n                data,\n                auction => auction.value.asker === accounts[0]\n            );\n        }\n\n        if (tab === 'bid') {\n            data = _.filter(data, auction =>\n                _.includes(LiBA.bids, auction.args[0])\n            );\n        }\n\n        return (\n            <List\n                grid={{ gutter: 16, column: 3 }}\n                dataSource={data}\n                renderItem={this.renderAuction}\n            />\n        );\n    };\n\n    render() {\n        const { isModalVisible, tab } = this.state;\n        const { network } = this.props;\n\n        return (\n            <Card\n                tabList={tabList}\n                title=\"LiBA\"\n                activeTabKey={tab}\n                onTabChange={this.onTabChange}\n                extra={\n                    <Button type=\"primary\" onClick={this.toggleModal}>\n                        Launch auction\n                    </Button>\n                }\n            >\n                {this.renderAuctions()}\n                <AuctionForm\n                    network={network}\n                    visible={isModalVisible}\n                    onClose={this.toggleModal}\n                />\n            </Card>\n        );\n    }\n}\n\nLiBA.propTypes = {\n    dispatch: PropTypes.func.isRequired\n};\n\nLiBA.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    const { contracts, accounts, LiBA, network } = state;\n\n    return {\n        accounts,\n        network,\n        LiBA: { ...LiBA, ...contracts.LiBA }\n    };\n}\n\nexport default drizzleConnect(LiBA, mapStateToProps);\n"],"sourceRoot":""}