{"version":3,"sources":["utils/network.js","utils/contracts.js","utils/form.js","components/select.js","components/form.js","components/approve-celr.js","App.js","utils/subscribe.js","router.js","models/polc.js","models/liba.js","models/network.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","getNetworkConfig","checkNetworkCompatbility","antd__WEBPACK_IMPORTED_MODULE_0__","networkConfigs","localNetworkConfig","supportedTokens","symbol","address","networkID","networkVersion","window","web3","currentProvider","Modal","error","title","content","_contracts_PoLC_json__WEBPACK_IMPORTED_MODULE_0__","_contracts_LiBA_json__WEBPACK_IMPORTED_MODULE_1__","_contracts_ERC20ExampleToken_json__WEBPACK_IMPORTED_MODULE_2__","contractOptions","block","fallback","type","url","contracts","PoLC","LiBA","ERC20","polls","accounts","blocks","currencyFieldOptions","celerFieldOptions","dayFieldOptions","blockFieldOptions","rateFieldOptions","minValueRule","unit","formatter","value","concat","parser","replace","minValue","validator","rule","callback","Option","Select","defaultProps","allowClear","disabled","optionFilterProp","placeholder","state","undefined","onChange","_this","setState","getValue","defaultValue","props","renderOptions","options","_","map","_ref","_ref2","Object","slicedToArray","text","react_default","a","createElement","key","this","objectSpread","omit","isNil","es_select","assign","showSearch","React","Component","FormItem","Form","Item","buttonLayout","wrapperCol","sm","span","offset","xs","FIELD_MAP","date","DatePicker","input","Input","number","InputNumber","TextArea","select","CustomizeForm","handleSubmit","e","_this$props","form","onSubmit","preventDefault","validateFields","err","values","renderFormItems","_this$props2","formItemLayout","items","getFieldDecorator","item","_item$field","field","fieldOptions","initialValue","label","name","rules","Field","decoratorOptions","getValueFromEvent","_len2","arguments","length","args","Array","_key2","fileList","target","checked","capitalize","_this$props3","submitText","es_form","noop","es_button","htmlType","labelCol","create","onValuesChange","changedValues","ApproveCelrForm","context","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClose","current","ERC20ExampleToken","methods","approve","utils","toWei","toString","send","createRef","drizzle","visible","formItems","message","required","modal","onOk","onCancel","components_form","ref","contextTypes","PropTypes","object","Sider","Layout","Content","Footer","App","toggleModal","prevState","isModalVisible","dispatch","account","events","NewCommitment","fromBlock","filter","user","event","_event$returnValues","returnValues","commitmentId","commitmentsByUser","cacheCall","NewAuction","auctionId","getAuction","getAuctionPeriod","NewBid","bidder","payload","subscribeEvent","blockNumber","selectedAddress","setInterval","location","reload","eth","getBlock","then","subscribeChainInfo","children","pathname","react","layout","card","className","drizzle_react_components","accountIndex","units","menu","theme","mode","selectedKeys","slice","router","to","onClick","approve_celr","style","textAlign","withRouter","drizzleConnect","ConnectedRouter","routerRedux","LoadingWrapper","LoadingContainer","redirectToHome","RouterConfig","history","app","Dynamic","component","Promise","all","bind","Auction","drizzle_react","store","_store","loadingComp","Spin","src_App_0","exact","path","render","polc","namespace","effects","reducers","save","action","liba","addBid","bids","toConsumableArray","models_network","rootSaga","regenerator_default","wrap","_context","prev","next","drizzleSagas","saga","fork","stop","_marked","dva","initialState","generateContractsInitialState","extraReducers","drizzleReducers","onError","resp","msg","srv","use","createLoading","model","PoLCModel","LiBAModel","NetworkModel","require","default","start","runSaga"],"mappings":"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","file":"static/js/main.1be68b7d.chunk.js","sourcesContent":["import { Modal } from 'antd';\n\nconst MAINNET = '1';\nconst ROPSTEN = '3';\n\nconst networkConfigs = {};\n\nconst localNetworkConfig = {\n    supportedTokens: [\n        {\n            symbol: 'ETH',\n            address: '0x0000000000000000000000000000000000000000'\n        }\n    ]\n};\n\nexport const getNetworkConfig = networkID => {\n    if (networkConfigs[networkID]) {\n        return networkConfigs[networkID];\n    }\n\n    return localNetworkConfig;\n};\n\nexport const checkNetworkCompatbility = () => {\n    if (process.env.NODE_ENV === 'development') {\n        return;\n    }\n\n    const networkVersion = window.web3.currentProvider.networkVersion;\n    if (networkVersion !== MAINNET && networkVersion !== ROPSTEN) {\n        Modal.error({\n            title: 'Current network is not supported',\n            content: 'Please switch to mainnet or ropsten'\n        });\n    }\n};\n","import PoLC from './../contracts/PoLC.json';\nimport LiBA from './../contracts/LiBA.json';\nimport ERC20 from './../contracts/ERC20ExampleToken.json';\n\n// let drizzle know what contracts we want\nconst contractOptions = {\n    web3: {\n        block: false,\n        fallback: {\n            type: 'ws',\n            url: 'ws://localhost:8545'\n        }\n    },\n    contracts: [PoLC, LiBA, ERC20],\n    polls: {\n        accounts: 1000,\n        blocks: 1000\n    }\n};\n\nexport default contractOptions;\n","export const currencyFieldOptions = unit => ({\n    formatter: value => (value ? `${value}${unit}` : ''),\n    parser: value => value.replace(/[A-Z]/g, '')\n});\n\nexport const celerFieldOptions = currencyFieldOptions('CELR');\n\nexport const dayFieldOptions = {\n    formatter: value => (value ? `${value}day` : ''),\n    parser: value => value.replace(/[a-z]/g, '')\n};\n\nexport const blockFieldOptions = {\n    formatter: value => (value ? `${value}block` : ''),\n    parser: value => value.replace(/[a-z]/g, '')\n};\n\nexport const rateFieldOptions = {\n    formatter: value => (value ? `${value}%` : ''),\n    parser: value => value.replace(/[%]/g, '')\n};\n\nexport const minValueRule = minValue => ({\n    validator: (rule, value, callback) => {\n        if (value < minValue) {\n            const msg = `value is smaller than ${minValue}`;\n            callback(msg);\n        }\n\n        callback();\n    }\n});\n","import React from 'react';\nimport { Select } from 'antd';\nimport _ from 'lodash';\n\nconst Option = Select.Option;\n\nexport default class extends React.Component {\n    defaultProps = {\n        allowClear: true,\n        disabled: false,\n        optionFilterProp: 'children',\n        placeholder: ''\n    };\n\n    state = { value: undefined };\n\n    onChange = (value: ValueType) => this.setState({ value });\n\n    getValue = () => {\n        const { defaultValue } = this.props;\n        const { value } = this.state;\n        return value || defaultValue;\n    };\n\n    renderOptions = () => {\n        const { options } = this.props;\n        return _.map(options, ([value, text]) => (\n            <Option key={value} value={value}>\n                {text}\n            </Option>\n        ));\n    };\n\n    render() {\n        const { defaultValue } = this.props;\n        const props = {\n            ..._.omit(this.props, ['options', 'defaultValue'])\n        };\n\n        if (!props.onChange) {\n            props.onChange = this.onChange;\n        }\n        if (!_.isNil(defaultValue)) {\n            props.defaultValue = defaultValue;\n        }\n\n        return (\n            <Select {...props} showSearch={true}>\n                {this.renderOptions()}\n            </Select>\n        );\n    }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { Button, DatePicker, Form, Input, InputNumber } from 'antd';\n\nimport Select from './select';\n\nconst FormItem = Form.Item;\n\nconst defaultFormItemLayout = {\n    labelCol: {\n        sm: { span: 8 },\n        xs: { span: 24 }\n    },\n\n    wrapperCol: {\n        sm: { span: 16 },\n        xs: { span: 24 }\n    }\n};\n\nconst buttonLayout = {\n    wrapperCol: {\n        sm: { span: 3, offset: 21 },\n        xs: { span: 24 }\n    }\n};\n\nconst FIELD_MAP = {\n    date: DatePicker,\n    input: Input,\n    number: InputNumber,\n    text: Input.TextArea,\n    select: Select\n};\n\nclass CustomizeForm extends React.Component {\n    handleSubmit = e => {\n        const { form, onSubmit } = this.props;\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                onSubmit(values);\n            }\n        });\n    };\n\n    renderFormItems = () => {\n        const { form, formItemLayout, items } = this.props;\n        const { getFieldDecorator } = form;\n\n        return _.map(items, item => {\n            const {\n                field = 'input',\n                fieldOptions,\n                initialValue,\n                label,\n                name,\n                rules\n            } = item;\n            const Field = FIELD_MAP[field];\n            const decoratorOptions = {\n                initialValue,\n                rules,\n                getValueFromEvent(...args) {\n                    if (field === 'file') {\n                        return args[0].fileList;\n                    }\n\n                    const [e] = args;\n                    if (!e || !e.target) {\n                        return e;\n                    }\n\n                    const { target } = e;\n                    return target.type === 'checkbox'\n                        ? target.checked\n                        : target.value;\n                }\n            };\n\n            return (\n                <FormItem\n                    key={name}\n                    {...formItemLayout}\n                    label={!label ? _.capitalize(name) : label}\n                >\n                    {getFieldDecorator(name, decoratorOptions)(\n                        <Field {...fieldOptions} />\n                    )}\n                </FormItem>\n            );\n        });\n    };\n\n    render() {\n        const { onSubmit, submitText } = this.props;\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                {this.renderFormItems()}\n                {onSubmit !== _.noop && (\n                    <FormItem {...buttonLayout}>\n                        <Button htmlType=\"submit\" type=\"primary\">\n                            {submitText}\n                        </Button>\n                    </FormItem>\n                )}\n            </Form>\n        );\n    }\n}\n\nCustomizeForm.defaultProps = {\n    formItemLayout: defaultFormItemLayout,\n    onSubmit: _.noop,\n    submitText: 'Save'\n};\n\nexport default Form.create({\n    onValuesChange(props, changedValues) {\n        if (props.onValuesChange) {\n            props.onValuesChange(changedValues);\n        }\n    }\n})(CustomizeForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from './form';\nimport { celerFieldOptions } from '../utils/form';\n\nclass ApproveCelrForm extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.form = React.createRef();\n        this.contracts = context.drizzle.contracts;\n    }\n\n    onSubmit = () => {\n        const { onClose } = this.props;\n\n        this.form.current.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            const { value } = values;\n\n            this.contracts.ERC20ExampleToken.methods\n                .approve(\n                    this.contracts.LiBA.address,\n                    web3.utils.toWei(value.toString(), 'ether')\n                )\n                .send();\n\n            onClose();\n        });\n    };\n\n    render() {\n        const { visible, onClose } = this.props;\n        const formItems = [\n            {\n                name: 'value',\n                field: 'number',\n                fieldOptions: {\n                    ...celerFieldOptions,\n                    placeholder: 'The amount of CELR allowance LiBA has'\n                },\n                rules: [\n                    {\n                        message: 'Please enter a value!',\n                        required: true\n                    }\n                ]\n            }\n        ];\n\n        return (\n            <Modal\n                title=\"Approve CELR to LiBA\"\n                visible={visible}\n                onOk={this.onSubmit}\n                onCancel={onClose}\n            >\n                <Form ref={this.form} items={formItems} />\n            </Modal>\n        );\n    }\n}\n\nApproveCelrForm.propTypes = {\n    visible: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nApproveCelrForm.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nexport default ApproveCelrForm;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { drizzleConnect } from 'drizzle-react';\nimport { withRouter, Link } from 'dva/router';\nimport { Card, Layout, Menu, Button } from 'antd';\nimport { AccountData } from 'drizzle-react-components';\n\nimport ApproveCELRForm from './components/approve-celr';\nimport { subscribeEvent, subscribeChainInfo } from './utils/subscribe';\nimport { getNetworkConfig } from './utils/network';\n\nimport './App.css';\n\nconst { Sider, Content, Footer } = Layout;\n\nclass App extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = { isModalVisible: false };\n        this.contracts = context.drizzle.contracts;\n        this.web3 = context.drizzle.web3;\n    }\n\n    componentWillMount() {\n        const { accounts, dispatch } = this.props;\n        subscribeEvent(accounts[0], this.contracts, dispatch);\n        subscribeChainInfo(this.web3, dispatch);\n\n        dispatch({\n            type: 'network/save',\n            payload: getNetworkConfig(this.web3.currentProvider.networkVersion)\n        });\n    }\n\n    toggleModal = () => {\n        this.setState(prevState => ({\n            isModalVisible: !prevState.isModalVisible\n        }));\n    };\n\n    render() {\n        const { isModalVisible } = this.state;\n        const { children, location } = this.props;\n        const { pathname } = location;\n\n        return (\n            <Layout>\n                <Sider>\n                    <Card className=\"account-data\" title=\"Account info\">\n                        <AccountData accountIndex={0} units={'ether'} />\n                    </Card>\n                    <Menu\n                        theme=\"dark\"\n                        mode=\"inline\"\n                        selectedKeys={[pathname.slice(1)]}\n                    >\n                        <Menu.Item key=\"polc\">\n                            <Link to=\"/polc\">PoLC</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"liba\">\n                            <Link to=\"/liba\">LiBA</Link>\n                        </Menu.Item>\n                        <Menu.Item className=\"approve-celr\">\n                            <Button\n                                type=\"primary\"\n                                block\n                                onClick={this.toggleModal}\n                            >\n                                Approve CELR\n                            </Button>\n                        </Menu.Item>\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Content>\n                        {children}\n                        <ApproveCELRForm\n                            visible={isModalVisible}\n                            onClose={this.toggleModal}\n                        />\n                    </Content>\n                    <Footer style={{ textAlign: 'center' }}>\n                        cEconomy ©2019 Created by Celer Network\n                    </Footer>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n\nApp.propTypes = {\n    children: PropTypes.element.isRequired,\n    location: PropTypes.object.isRequired\n};\n\nApp.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    const { accounts } = state;\n\n    return {\n        accounts\n    };\n}\n\nexport default withRouter(drizzleConnect(App, mapStateToProps));\n","const POLL_INTERVAL = 1000;\n\nexport const subscribeEvent = (account, contracts, dispatch) => {\n    const { PoLC, LiBA } = contracts;\n\n    PoLC.events.NewCommitment(\n        {\n            fromBlock: 0,\n            filter: {\n                user: account\n            }\n        },\n        (err, event) => {\n            if (err) {\n                return;\n            }\n\n            const { commitmentId, user } = event.returnValues;\n            PoLC.methods.commitmentsByUser.cacheCall(user, commitmentId);\n        }\n    );\n\n    LiBA.events.NewAuction(\n        {\n            fromBlock: 0\n        },\n        (err, event) => {\n            if (err) {\n                return;\n            }\n\n            const { auctionId } = event.returnValues;\n            LiBA.methods.getAuction.cacheCall(auctionId);\n            LiBA.methods.getAuctionPeriod.cacheCall(auctionId);\n        }\n    );\n\n    LiBA.events.NewBid(\n        {\n            fromBlock: 0,\n            filter: {\n                bidder: account\n            }\n        },\n        (err, event) => {\n            if (err) {\n                return;\n            }\n\n            const { auctionId } = event.returnValues;\n            dispatch({\n                type: 'LiBA/addBid',\n                payload: { auctionId }\n            });\n        }\n    );\n};\n\nexport const subscribeChainInfo = (web3, dispatch) => {\n    const account = web3.currentProvider.selectedAddress;\n    let blockNumber;\n\n    setInterval(() => {\n        if (account !== web3.currentProvider.selectedAddress) {\n            window.location.reload();\n        }\n\n        return web3.eth.getBlock('latest').then(block => {\n            if (block && blockNumber !== block.number) {\n                dispatch({\n                    type: 'network/save',\n                    payload: { block }\n                });\n                blockNumber = block.number;\n            }\n        });\n    }, POLL_INTERVAL);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, routerRedux, Switch, Route, Redirect } from 'dva/router';\nimport Dynamic from 'dva/dynamic';\nimport { DrizzleProvider } from 'drizzle-react';\nimport { LoadingContainer } from 'drizzle-react-components';\nimport { Spin } from 'antd';\n\nimport App from './App';\nimport contractOptions from './utils/contracts';\n\nconst { ConnectedRouter } = routerRedux;\nconst LoadingWrapper = withRouter(LoadingContainer);\n\nconst redirectToHome = () => <Redirect to=\"/polc\" />;\n\nfunction RouterConfig({ history, app }) {\n    const PoLC = Dynamic({\n        app,\n        component: () => import('./routes/polc')\n    });\n    const LiBA = Dynamic({\n        app,\n        component: () => import('./routes/liba')\n    });\n    const Auction = Dynamic({\n        app,\n        component: () => import('./routes/auction')\n    });\n\n    return (\n        <DrizzleProvider options={contractOptions} store={app._store}>\n            <ConnectedRouter history={history}>\n                <LoadingWrapper loadingComp={Spin}>\n                    <App>\n                        <Switch>\n                            <Route exact path=\"/polc\" component={PoLC} />\n                            <Route exact path=\"/liba\" component={LiBA} />\n                            <Route\n                                exact\n                                path=\"/auction/:id\"\n                                component={Auction}\n                            />\n                            <Route exact path=\"/\" render={redirectToHome} />\n                        </Switch>\n                    </App>\n                </LoadingWrapper>\n            </ConnectedRouter>\n        </DrizzleProvider>\n    );\n}\n\nRouterConfig.propTypes = {\n    history: PropTypes.object.isRequired\n};\n\nexport default RouterConfig;\n","export default {\n    namespace: 'PoLC',\n\n    state: {},\n\n    effects: {},\n\n    reducers: {\n        save(state, action) {\n            return { ...state, ...action.payload };\n        }\n    }\n};\n","export default {\n    namespace: 'LiBA',\n\n    state: {},\n\n    effects: {},\n\n    reducers: {\n        addBid(state, action) {\n            return {\n                ...state,\n                bids: [...(state.bids || []), action.payload.auctionId]\n            };\n        },\n\n        save(state, action) {\n            return { ...state, ...action.payload };\n        }\n    }\n};\n","export default {\n    namespace: 'network',\n\n    state: {},\n\n    effects: {},\n\n    reducers: {\n        save(state, action) {\n            return { ...state, ...action.payload };\n        }\n    }\n};\n","import dva from 'dva';\nimport createLoading from 'dva-loading';\nimport { all, fork } from 'redux-saga/effects';\nimport {\n    generateContractsInitialState,\n    drizzleReducers,\n    drizzleSagas\n} from 'drizzle';\nimport { message } from 'antd';\n\nimport contractOptions from './utils/contracts';\nimport { checkNetworkCompatbility } from './utils/network';\nimport PoLCModel from './models/polc';\nimport LiBAModel from './models/liba';\nimport NetworkModel from './models/network';\n\nfunction*rootSaga() {\n    yield all(drizzleSagas.map(saga => fork(saga)));\n}\n\ncheckNetworkCompatbility();\n\n// 1. Initialize\nconst app = dva({\n    initialState: {\n        ...generateContractsInitialState(contractOptions)\n    },\n    extraReducers: {\n        ...drizzleReducers\n    },\n    onError(err, dispatch) {\n        if (err.resp) {\n            message.error(err.resp.msg);\n        } else if (err.srv) {\n            message.error(err.srv.msg);\n        } else {\n            message.error(err);\n        }\n    }\n});\n\n// 2. Plugins\napp.use(\n    createLoading({\n        namespace: 'loading'\n        // effects: enable effects level loading state\n    })\n);\n\n// 3. Model\n// Moved to router.js\napp.model(PoLCModel);\napp.model(LiBAModel);\napp.model(NetworkModel);\n\n// 4. Router\napp.router(require('./router.js').default);\n\n// 5. Start\napp.start('#root');\napp._store.runSaga(rootSaga);\n"],"sourceRoot":""}