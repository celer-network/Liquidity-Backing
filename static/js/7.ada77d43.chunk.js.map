{"version":3,"sources":["utils/unit.js","utils/liba.js","components/liba/auction-form.js","routes/liba.js"],"names":["__webpack_require__","d","__webpack_exports__","getUnitByAddress","formatCurrencyValue","formatCelrValue","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","n","web3__WEBPACK_IMPORTED_MODULE_1__","web3__WEBPACK_IMPORTED_MODULE_1___default","supportedTokens","address","token","_","find","supportedToken","symbol","value","unit","toNumber","concat","web3","utils","fromWei","BN","BID","REVEAL","CLAIM","CHALLENGE","FINALIZE","FINALIZED","EXPIRED","getCurrentPeriod","network","auction","auctionPeriods","blockNumber","get","auctionPeriod","args","_$get","bidEnd","revealEnd","claimEnd","challengeEnd","finalizeEnd","finalized","getWinners","bids","topLoser","winners","remainingValue","sort","compareBid","forEach","bid","bidder","Object","_Users_zhuxuefeng_mygit_celer_cEconomy_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","push","last","calculateRepay","result","_bid$value","rate","includes","add","muln","parseInt","divn","console","log","toString","bid1","bid2","_bid1$value","rate1","celerValue1","_bid2$value","rate2","celerValue2","AuctionForm","props","context","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleValueChange","changedValue","setState","handleInitAuction","onClose","form","current","validateFields","err","values","bidDuration","revealDuration","claimDuration","challengeDuration","finalizeDuration","duration","maxRate","minValue","collateralAddress","_values$collateralVal","collateralValue","contracts","LiBA","methods","initAuction","cacheSend","toWei","state","React","createRef","drizzle","_this$props","visible","supportedTokenOptions","map","formItems","name","field","fieldOptions","options","placeholder","rules","message","required","objectSpread","currencyFieldOptions","minValueRule","dayFieldOptions","label","rateFieldOptions","step","precision","blockFieldOptions","react_default","a","createElement","modal","title","onOk","onCancel","components_form","ref","items","onValuesChange","Component","contextTypes","PropTypes","object","tabList","key","tab","onTabChange","toggleModal","prevState","isModalVisible","renderAuction","_auction$value","asker","tokenAddress","list","Item","card","actions","router","to","icon","type","row","col","span","statistic","getAuctionPeriod","renderAuctions","_this$props2","accounts","data","getAuction","filter","grid","gutter","column","dataSource","renderItem","_this$state","activeTabKey","extra","es_button","onClick","auction_form","drizzleConnect"],"mappings":"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","file":"static/js/7.ada77d43.chunk.js","sourcesContent":["import _ from 'lodash';\nimport web3 from 'web3';\n\nimport './network';\n\nexport const getUnitByAddress = (supportedTokens, address) => {\n    const token = _.find(\n        supportedTokens,\n        supportedToken => supportedToken.address === address\n    );\n\n    if (!token) {\n        return '';\n    }\n    return token.symbol;\n};\n\nexport const formatCurrencyValue = (value, unit) => {\n    const num = _.toNumber(value);\n\n    if (num < 100000) {\n        return `${value} wei`;\n    }\n\n    return `${web3.utils.fromWei(value)} ${unit}`;\n};\n\nexport const formatCelrValue = value => {\n    return formatCurrencyValue(value, 'CELR');\n};\n","import _ from 'lodash';\nimport web3 from 'web3';\n\nconst { BN } = web3.utils;\n\nexport const BID = 'Bid';\nexport const REVEAL = 'Reveal';\nexport const CLAIM = 'Claim';\nexport const CHALLENGE = 'Challenge';\nexport const FINALIZE = 'Finalize';\nexport const FINALIZED = 'Finalized';\nexport const EXPIRED = 'Expired';\nexport const UNKNOWN = 'Unknown';\n\nexport const getCurrentPeriod = (network, auction, auctionPeriods) => {\n    const blockNumber = _.get(network, 'block.number');\n    const auctionPeriod = _.find(\n        auctionPeriods,\n        auctionPeriod => auctionPeriod.args[0] === auction.args[0]\n    );\n    const {\n        bidEnd,\n        revealEnd,\n        claimEnd,\n        challengeEnd,\n        finalizeEnd,\n        finalized\n    } = _.get(auctionPeriod, 'value', {});\n\n    if (blockNumber < _.toNumber(bidEnd)) {\n        return BID;\n    }\n\n    if (blockNumber < _.toNumber(revealEnd)) {\n        return REVEAL;\n    }\n\n    if (blockNumber < _.toNumber(claimEnd)) {\n        return CLAIM;\n    }\n\n    if (blockNumber < _.toNumber(challengeEnd)) {\n        return CHALLENGE;\n    }\n\n    if (blockNumber < _.toNumber(finalizeEnd)) {\n        return FINALIZE;\n    }\n\n    if (finalized) {\n        return FINALIZED;\n    }\n\n    return EXPIRED;\n};\n\nexport const getWinners = (auction, bids) => {\n    const winners = [];\n    let topLoser;\n    let remainingValue = auction.value.value;\n    bids.sort(compareBid);\n\n    _.forEach(bids, bid => {\n        const [bidder] = bid.args;\n        const { value } = bid.value;\n\n        if (remainingValue < 0) {\n            topLoser = bidder;\n            return false;\n        }\n\n        remainingValue -= value;\n        winners.push(bidder);\n    });\n\n    if (!topLoser) {\n        topLoser = _.last(winners);\n    }\n\n    return { winners, topLoser };\n};\n\nexport const calculateRepay = (bids, winners) => {\n    let result = new BN(0);\n\n    _.forEach(bids, bid => {\n        const [bidder] = bid.args;\n        const { value, rate } = bid.value;\n\n        if (!_.includes(winners, bidder)) {\n            return;\n        }\n\n        result = result.add(new BN(value).muln(100 + parseInt(rate)).divn(100));\n        console.log(rate, result.toString());\n    });\n\n    return result;\n};\n\nconst compareBid = (bid1, bid2) => {\n    const { rate1, celerValue1 } = bid1.value;\n    const { rate2, celerValue2 } = bid2.value;\n\n    if (rate1 !== rate2) {\n        return rate1 - rate2;\n    }\n\n    return celerValue2 - celerValue1;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\nimport {\n    currencyFieldOptions,\n    rateFieldOptions,\n    minValueRule,\n    blockFieldOptions,\n    dayFieldOptions\n} from '../../utils/form';\nimport { getUnitByAddress } from '../../utils/unit';\n\nclass AuctionForm extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = {};\n        this.form = React.createRef();\n        this.contracts = context.drizzle.contracts;\n    }\n\n    handleValueChange = changedValue => this.setState(changedValue);\n\n    handleInitAuction = () => {\n        const { onClose } = this.props;\n\n        this.form.current.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            const {\n                token,\n                bidDuration,\n                revealDuration,\n                claimDuration,\n                challengeDuration,\n                finalizeDuration,\n                value,\n                duration,\n                maxRate,\n                minValue,\n                collateralAddress,\n                collateralValue = 0\n            } = values;\n\n            this.contracts.LiBA.methods.initAuction.cacheSend(\n                token,\n                bidDuration,\n                revealDuration,\n                claimDuration,\n                challengeDuration,\n                finalizeDuration,\n                web3.utils.toWei(value.toString(), 'ether'),\n                duration,\n                maxRate,\n                web3.utils.toWei(minValue.toString(), 'ether'),\n                collateralAddress,\n                web3.utils.toWei(collateralValue.toString(), 'ether')\n            );\n            onClose();\n        });\n    };\n\n    render() {\n        const { visible, network, onClose } = this.props;\n        const supportedTokenOptions = network.supportedTokens.map(\n            supportedToken => [\n                supportedToken.address,\n                `${supportedToken.symbol} (${supportedToken.address})`\n            ]\n        );\n        const unit = getUnitByAddress(\n            network.supportedTokens,\n            this.state.token\n        );\n\n        const formItems = [\n            {\n                name: 'token',\n                field: 'select',\n                fieldOptions: {\n                    options: supportedTokenOptions,\n                    placeholder: 'Token type to borrow'\n                },\n                rules: [\n                    {\n                        message: 'Please select a token!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'value',\n                field: 'number',\n                fieldOptions: {\n                    ...currencyFieldOptions(unit),\n                    placeholder: 'The amount of token to borrow'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a value!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'duration',\n                field: 'number',\n                fieldOptions: {\n                    ...dayFieldOptions,\n                    placeholder: 'The duration of the borrowing'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'maxRate',\n                label: 'Max Rate',\n                field: 'number',\n                fieldOptions: {\n                    ...rateFieldOptions,\n                    step: 0.001,\n                    precision: 3,\n                    placeholder: 'The maximum interest rate'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a max rate!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'minValue',\n                label: 'Min Value',\n                field: 'number',\n                fieldOptions: {\n                    ...currencyFieldOptions(unit),\n                    placeholder: 'The minimum value for bidding'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a min value!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'collateralAddress',\n                label: 'Collateral Address',\n                fieldOptions: {\n                    placeholder: 'The address of collateral token'\n                }\n            },\n            {\n                name: 'collateralValue',\n                label: 'Collateral Value',\n                field: 'number',\n                fieldOptions: {\n                    placeholder: 'The amount of collateral token'\n                },\n                rules: [minValueRule(0)]\n            },\n            {\n                name: 'bidDuration',\n                label: 'Bid Duration',\n                field: 'number',\n                fieldOptions: {\n                    ...blockFieldOptions,\n                    placeholder: 'The duration of bidding period'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'revealDuration',\n                label: 'Reveal Duration',\n                field: 'number',\n                fieldOptions: {\n                    ...blockFieldOptions,\n                    placeholder: 'The duration of revealing period'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'claimDuration',\n                label: 'Claim Duration',\n                field: 'number',\n                fieldOptions: {\n                    ...blockFieldOptions,\n                    placeholder: 'The duration of claiming period'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'challengeDuration',\n                label: 'Challenge Duration',\n                field: 'number',\n                fieldOptions: {\n                    ...blockFieldOptions,\n                    placeholder: 'The duration of challenge period'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'finalizeDuration',\n                label: 'Finalize Duration',\n                field: 'number',\n                fieldOptions: {\n                    ...blockFieldOptions,\n                    placeholder: 'The duration of finalize period'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a duration!',\n                        required: true\n                    }\n                ]\n            }\n        ];\n\n        return (\n            <Modal\n                title=\"Launch Auction\"\n                visible={visible}\n                onOk={this.handleInitAuction}\n                onCancel={onClose}\n            >\n                <Form\n                    ref={this.form}\n                    items={formItems}\n                    onValuesChange={this.handleValueChange}\n                />\n            </Modal>\n        );\n    }\n}\n\nAuctionForm.propTypes = {\n    visible: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nAuctionForm.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nexport default AuctionForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport { Link } from 'dva/router';\nimport { Button, Card, List, Statistic, Row, Col, Icon } from 'antd';\n\nimport AuctionForm from '../components/liba/auction-form';\nimport { getUnitByAddress, formatCurrencyValue } from '../utils/unit';\nimport { getCurrentPeriod } from '../utils/liba';\n\nconst tabList = [\n    {\n        key: 'all',\n        tab: 'All'\n    },\n    {\n        key: 'own',\n        tab: 'Own'\n    },\n    {\n        key: 'bid',\n        tab: 'Bid'\n    }\n];\n\nclass LiBA extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = { isModalVisible: false, tab: 'all' };\n        this.contracts = context.drizzle.contracts;\n    }\n\n    onTabChange = tab => {\n        this.setState({ tab });\n    };\n\n    toggleModal = () => {\n        this.setState(prevState => ({\n            isModalVisible: !prevState.isModalVisible\n        }));\n    };\n\n    renderAuction = auction => {\n        const { network, LiBA } = this.props;\n        const { asker, value, duration, tokenAddress } = auction.value;\n        const unit = getUnitByAddress(network.supportedTokens, tokenAddress);\n\n        return (\n            <List.Item>\n                <Card\n                    actions={[\n                        <Link to={`/auction/${auction.args[0]}`}>\n                            <Icon type=\"eye\" title=\"View Detail\" />\n                        </Link>\n                    ]}\n                >\n                    <Row>\n                        <Col span={12}>\n                            <Statistic title=\"Asker\" value={asker} />\n                        </Col>\n                        <Col span={12}>\n                            <Statistic\n                                title=\"Period\"\n                                value={getCurrentPeriod(\n                                    network,\n                                    auction,\n                                    LiBA.getAuctionPeriod\n                                )}\n                            />\n                        </Col>\n                        <Col span={12}>\n                            <Statistic\n                                title=\"Value\"\n                                value={formatCurrencyValue(value, unit)}\n                            />\n                        </Col>\n                        <Col span={12}>\n                            <Statistic\n                                title=\"Duration\"\n                                value={`${duration} Day`}\n                            />\n                        </Col>\n                    </Row>\n                </Card>\n            </List.Item>\n        );\n    };\n\n    renderAuctions = () => {\n        const { accounts, LiBA } = this.props;\n        const { tab } = this.state;\n\n        let data = _.values(LiBA.getAuction);\n\n        if (tab === 'own') {\n            data = _.filter(\n                data,\n                auction => auction.value.asker === accounts[0]\n            );\n        }\n\n        if (tab === 'bid') {\n            data = _.filter(data, auction =>\n                _.includes(LiBA.bids, auction.args[0])\n            );\n        }\n\n        return (\n            <List\n                grid={{ gutter: 16, column: 3 }}\n                dataSource={data}\n                renderItem={this.renderAuction}\n            />\n        );\n    };\n\n    render() {\n        const { isModalVisible, tab } = this.state;\n        const { network } = this.props;\n\n        return (\n            <Card\n                tabList={tabList}\n                title=\"LiBA\"\n                activeTabKey={tab}\n                onTabChange={this.onTabChange}\n                extra={\n                    <Button type=\"primary\" onClick={this.toggleModal}>\n                        Launch auction\n                    </Button>\n                }\n            >\n                {this.renderAuctions()}\n                <AuctionForm\n                    network={network}\n                    visible={isModalVisible}\n                    onClose={this.toggleModal}\n                />\n            </Card>\n        );\n    }\n}\n\nLiBA.propTypes = {\n    dispatch: PropTypes.func.isRequired\n};\n\nLiBA.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    const { contracts, accounts, LiBA, network } = state;\n\n    return {\n        accounts,\n        network,\n        LiBA: { ...LiBA, ...contracts.LiBA }\n    };\n}\n\nexport default drizzleConnect(LiBA, mapStateToProps);\n"],"sourceRoot":""}