{"version":3,"sources":["utils/unit.js","utils/form.js","components/select.js","components/form.js","utils/liba.js","components/auction/bid-table.js","components/auction/bid-form.js","components/auction/reveal-form.js","routes/auction.js"],"names":["__webpack_require__","d","__webpack_exports__","getUnitByAddress","formatCurrencyValue","formatEthValue","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","n","web3__WEBPACK_IMPORTED_MODULE_1__","web3__WEBPACK_IMPORTED_MODULE_1___default","supportedTokens","address","token","_","find","supportedToken","symbol","value","unit","toNumber","concat","web3","utils","fromWei","etherFieldOptions","currencyFieldOptions","dayFieldOptions","blockFieldOptions","minValueRule","formatter","parser","replace","minValue","validator","rule","callback","Option","Select","defaultProps","allowClear","disabled","optionFilterProp","placeholder","state","undefined","onChange","_this","setState","getValue","defaultValue","props","renderOptions","options","map","_ref","_ref2","Object","slicedToArray","text","react_default","a","createElement","key","this","objectSpread","omit","isNil","es_select","assign","showSearch","React","Component","FormItem","Form","Item","buttonLayout","wrapperCol","sm","span","offset","xs","FIELD_MAP","date","DatePicker","input","Input","number","InputNumber","TextArea","select","CustomizeForm","handleSubmit","e","_this$props","form","onSubmit","preventDefault","validateFields","err","values","renderFormItems","_this$props2","formItemLayout","items","getFieldDecorator","item","_item$field","field","fieldOptions","initialValue","label","name","rules","Field","decoratorOptions","getValueFromEvent","_len2","arguments","length","args","Array","_key2","fileList","target","type","checked","capitalize","_this$props3","submitText","es_form","noop","es_button","htmlType","labelCol","create","onValuesChange","changedValues","BID","REVEAL","CLAIM","CHALLENGE","FINALIZE","FINALIZED","EXPIRED","getCurrentPeriod","getWinners","network","auction","auctionPeriods","blockNumber","get","auctionPeriod","_$get","bidEnd","revealEnd","claimEnd","challengeEnd","finalizeEnd","finalized","compareBid","bid1","bid2","_bid1$value","rate1","celerValue1","_bid2$value","rate2","celerValue2","bids","result","remainingValue","sort","forEach","bid","bidder","push","columns","title","dataIndex","BidTable","auctionId","LiBA","dataSource","filter","bidsByUser","table","pagination","drizzleConnect","contracts","BidForm","context","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClose","current","celerValue","rate","salt","methods","placeBid","cacheSend","soliditySha3","toWei","toString","createRef","drizzle","visible","formItems","message","required","modal","onOk","onCancel","components_form","ref","contextTypes","PropTypes","object","RevealForm","commitmentID","revealBid","parseInt","PoLC","commitmentOptions","commitmentsByUser","commitment","id","availableValue","Step","Steps","steps","Auction","takeAction","currentPeriod","toggleBidModal","toggleRevealModal","claimWinners","challengeWinners","finalizeAuction","prevState","isBidModalVisible","isRevealModalVisible","_this$state","winners","send","_this$state2","calculatedWinners","isEqual","notification","error","finalizeBid","collectCollateral","repayAuction","renderAction","accounts","_this$state3","currentStep","currentAccount","asker","block","onClick","includes","renderAuctionDetail","_this$state4","_auction$value","tokenAddress","collateralAddress","collateralValue","duration","maxRate","row","style","marginTop","col","statistic","Fragment","tabs","TabPane","tab","bid_table","list","size","bordered","renderItem","winner","match","params","events","RevealBid","fromBlock","event","_event$returnValues","returnValues","cacheCall","ClaimWinners","_this$state5","skeleton","alertMsg","es_alert","showIcon","card","actions","step","bid_form","reveal_form","_props$LiBA","auctions","getAuction","getAuctionPeriod","indexOf"],"mappings":"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","file":"static/js/5.b93ebb13.chunk.js","sourcesContent":["import _ from 'lodash';\nimport web3 from 'web3';\n\nimport './network';\n\nexport const getUnitByAddress = (supportedTokens, address) => {\n    const token = _.find(\n        supportedTokens,\n        supportedToken => supportedToken.address === address\n    );\n\n    if (!token) {\n        return '';\n    }\n    return token.symbol;\n};\n\nexport const formatCurrencyValue = (value, unit) => {\n    const num = _.toNumber(value);\n\n    if (num < 100000) {\n        return `${value} wei`;\n    }\n\n    return `${web3.utils.fromWei(value)} ${unit}`;\n};\n\nexport const formatEthValue = value => {\n    const num = _.toNumber(value);\n\n    if (num < 100000) {\n        return `${value} wei`;\n    }\n\n    return `${web3.utils.fromWei(value)} ether`;\n};\n","export const etherFieldOptions = {\n    formatter: value => (value ? `${value}ether` : ''),\n    parser: value => value.replace(/[a-z]/g, '')\n};\n\nexport const currencyFieldOptions = unit => ({\n    formatter: value => (value ? `${value}${unit}` : ''),\n    parser: value => value.replace(/[A-Z]/g, '')\n});\n\nexport const dayFieldOptions = {\n    formatter: value => (value ? `${value}day` : ''),\n    parser: value => value.replace(/[a-z]/g, '')\n};\n\nexport const blockFieldOptions = {\n    formatter: value => (value ? `${value}block` : ''),\n    parser: value => value.replace(/[a-z]/g, '')\n};\n\nexport const minValueRule = minValue => ({\n    validator: (rule, value, callback) => {\n        if (value < minValue) {\n            const msg = `value is smaller than ${minValue}`;\n            callback(msg);\n        }\n\n        callback();\n    }\n});\n","import React from 'react';\nimport { Select } from 'antd';\nimport _ from 'lodash';\n\nconst Option = Select.Option;\n\nexport default class extends React.Component {\n    defaultProps = {\n        allowClear: true,\n        disabled: false,\n        optionFilterProp: 'children',\n        placeholder: ''\n    };\n\n    state = { value: undefined };\n\n    onChange = (value: ValueType) => this.setState({ value });\n\n    getValue = () => {\n        const { defaultValue } = this.props;\n        const { value } = this.state;\n        return value || defaultValue;\n    };\n\n    renderOptions = () => {\n        const { options } = this.props;\n        return _.map(options, ([value, text]) => (\n            <Option key={value} value={value}>\n                {text}\n            </Option>\n        ));\n    };\n\n    render() {\n        const { defaultValue } = this.props;\n        const props = {\n            ..._.omit(this.props, ['options', 'defaultValue'])\n        };\n\n        if (!props.onChange) {\n            props.onChange = this.onChange;\n        }\n        if (!_.isNil(defaultValue)) {\n            props.defaultValue = defaultValue;\n        }\n\n        return (\n            <Select {...props} showSearch={true}>\n                {this.renderOptions()}\n            </Select>\n        );\n    }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { Button, DatePicker, Form, Input, InputNumber } from 'antd';\n\nimport Select from './select';\n\nconst FormItem = Form.Item;\n\nconst defaultFormItemLayout = {\n    labelCol: {\n        sm: { span: 8 },\n        xs: { span: 24 }\n    },\n\n    wrapperCol: {\n        sm: { span: 16 },\n        xs: { span: 24 }\n    }\n};\n\nconst buttonLayout = {\n    wrapperCol: {\n        sm: { span: 3, offset: 21 },\n        xs: { span: 24 }\n    }\n};\n\nconst FIELD_MAP = {\n    date: DatePicker,\n    input: Input,\n    number: InputNumber,\n    text: Input.TextArea,\n    select: Select\n};\n\nclass CustomizeForm extends React.Component {\n    handleSubmit = e => {\n        const { form, onSubmit } = this.props;\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                onSubmit(values);\n            }\n        });\n    };\n\n    renderFormItems = () => {\n        const { form, formItemLayout, items } = this.props;\n        const { getFieldDecorator } = form;\n\n        return _.map(items, item => {\n            const {\n                field = 'input',\n                fieldOptions,\n                initialValue,\n                label,\n                name,\n                rules\n            } = item;\n            const Field = FIELD_MAP[field];\n            const decoratorOptions = {\n                initialValue,\n                rules,\n                getValueFromEvent(...args) {\n                    if (field === 'file') {\n                        return args[0].fileList;\n                    }\n\n                    const [e] = args;\n                    if (!e || !e.target) {\n                        return e;\n                    }\n\n                    const { target } = e;\n                    return target.type === 'checkbox'\n                        ? target.checked\n                        : target.value;\n                }\n            };\n\n            return (\n                <FormItem\n                    key={name}\n                    {...formItemLayout}\n                    label={!label ? _.capitalize(name) : label}\n                >\n                    {getFieldDecorator(name, decoratorOptions)(\n                        <Field {...fieldOptions} />\n                    )}\n                </FormItem>\n            );\n        });\n    };\n\n    render() {\n        const { onSubmit, submitText } = this.props;\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                {this.renderFormItems()}\n                {onSubmit !== _.noop && (\n                    <FormItem {...buttonLayout}>\n                        <Button htmlType=\"submit\" type=\"primary\">\n                            {submitText}\n                        </Button>\n                    </FormItem>\n                )}\n            </Form>\n        );\n    }\n}\n\nCustomizeForm.defaultProps = {\n    formItemLayout: defaultFormItemLayout,\n    onSubmit: _.noop,\n    submitText: 'Save'\n};\n\nexport default Form.create({\n    onValuesChange(props, changedValues) {\n        if (props.onValuesChange) {\n            props.onValuesChange(changedValues);\n        }\n    }\n})(CustomizeForm);\n","import _ from 'lodash';\n\nexport const BID = 'Bid';\nexport const REVEAL = 'Reveal';\nexport const CLAIM = 'Claim';\nexport const CHALLENGE = 'Challenge';\nexport const FINALIZE = 'Finalize';\nexport const FINALIZED = 'Finalized';\nexport const EXPIRED = 'Expired';\nexport const UNKNOWN = 'Unknown';\n\nexport const getCurrentPeriod = (network, auction, auctionPeriods) => {\n    const blockNumber = _.get(network, 'block.number');\n    const auctionPeriod = _.find(\n        auctionPeriods,\n        auctionPeriod => auctionPeriod.args[0] === auction.args[0]\n    );\n    const {\n        bidEnd,\n        revealEnd,\n        claimEnd,\n        challengeEnd,\n        finalizeEnd,\n        finalized\n    } = _.get(auctionPeriod, 'value', {});\n\n    if (blockNumber < _.toNumber(bidEnd)) {\n        return BID;\n    }\n\n    if (blockNumber < _.toNumber(revealEnd)) {\n        return REVEAL;\n    }\n\n    if (blockNumber < _.toNumber(claimEnd)) {\n        return CLAIM;\n    }\n\n    if (blockNumber < _.toNumber(challengeEnd)) {\n        return CHALLENGE;\n    }\n\n    if (blockNumber < _.toNumber(finalizeEnd)) {\n        return FINALIZE;\n    }\n\n    if (finalized) {\n        return FINALIZED;\n    }\n\n    return EXPIRED;\n};\n\nconst compareBid = (bid1, bid2) => {\n    const { rate1, celerValue1 } = bid1.value;\n    const { rate2, celerValue2 } = bid2.value;\n\n    if (rate1 !== rate2) {\n        return rate1 - rate2;\n    }\n\n    return celerValue2 - celerValue1;\n};\n\nexport const getWinners = (auction, bids) => {\n    const result = [];\n    let remainingValue = auction.value.value;\n    bids.sort(compareBid);\n\n    _.forEach(bids, bid => {\n        const bidder = bid.args[0];\n        const { value } = bid.value;\n\n        remainingValue -= value;\n        result.push(bidder);\n\n        if (remainingValue < 0) {\n            return false;\n        }\n    });\n\n    return result;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport { Table } from 'antd';\n\nimport { formatEthValue } from '../../utils/unit';\n\nconst columns = [\n    {\n        title: 'Bidder',\n        dataIndex: 'bidder'\n    },\n    {\n        title: 'Rate',\n        dataIndex: 'rate'\n    },\n    {\n        title: 'Value',\n        dataIndex: 'value'\n    },\n    {\n        title: 'Celer value',\n        dataIndex: 'celerValue'\n    }\n];\n\nclass BidTable extends React.Component {\n    render() {\n        const { auctionId, LiBA } = this.props;\n        const dataSource = _.filter(\n            LiBA.bidsByUser,\n            bid => bid.args[1] === auctionId\n        ).map(bid => {\n            const bidder = bid.args[0];\n\n            return {\n                ...bid.value,\n                bidder,\n                value: formatEthValue(bid.value.value)\n            };\n        });\n\n        return (\n            <Table\n                dataSource={dataSource}\n                columns={columns}\n                pagination={false}\n            />\n        );\n    }\n}\n\nBidTable.propTypes = {\n    auctionId: PropTypes.string.isRequired,\n    LiBA: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n    const { contracts } = state;\n\n    return {\n        LiBA: contracts.LiBA\n    };\n}\n\nexport default drizzleConnect(BidTable, mapStateToProps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\nimport { etherFieldOptions, minValueRule } from '../../utils/form';\n\nclass BidForm extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.form = React.createRef();\n        this.contracts = context.drizzle.contracts;\n    }\n\n    onSubmit = () => {\n        const { auctionId, onClose } = this.props;\n\n        this.form.current.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            const { celerValue, value, rate, salt } = values;\n\n            this.contracts.LiBA.methods.placeBid.cacheSend(\n                auctionId,\n                web3.utils.soliditySha3(\n                    rate,\n                    web3.utils.toWei(value.toString(), 'ether'),\n                    celerValue,\n                    salt\n                ),\n                celerValue + salt\n            );\n            onClose();\n        });\n    };\n\n    render() {\n        const { visible, onClose } = this.props;\n        const formItems = [\n            {\n                name: 'value',\n                field: 'number',\n                fieldOptions: etherFieldOptions,\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a value!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'rate',\n                field: 'number',\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a rate!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'celerValue',\n                label: 'Celer Value',\n                field: 'number',\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a celer value!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'salt',\n                field: 'number',\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a salt!',\n                        required: true\n                    }\n                ]\n            }\n        ];\n\n        return (\n            <Modal\n                title=\"Bid Auction\"\n                visible={visible}\n                onOk={this.onSubmit}\n                onCancel={onClose}\n            >\n                <Form ref={this.form} items={formItems} />\n            </Modal>\n        );\n    }\n}\n\nBidForm.propTypes = {\n    auctionId: PropTypes.string.isRequired,\n    visible: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nBidForm.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nexport default BidForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\nimport { etherFieldOptions, minValueRule } from '../../utils/form';\nimport { formatEthValue } from '../../utils/unit';\n\nclass RevealForm extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.form = React.createRef();\n        this.contracts = context.drizzle.contracts;\n    }\n\n    onSubmit = () => {\n        const { auctionId, onClose } = this.props;\n\n        this.form.current.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            const { celerValue, value, rate, salt, commitmentID } = values;\n\n            this.contracts.LiBA.methods.revealBid.cacheSend(\n                auctionId,\n                rate,\n                web3.utils.toWei(value.toString(), 'ether'),\n                celerValue,\n                salt,\n                parseInt(commitmentID)\n            );\n            onClose();\n        });\n    };\n\n    render() {\n        const { visible, PoLC, onClose } = this.props;\n        const commitmentOptions = _.map(PoLC.commitmentsByUser, commitment => {\n            const id = commitment.args[1];\n            const availableValue = formatEthValue(\n                commitment.value.availableValue\n            );\n\n            return [id, `ID: ${id}, Available Value: ${availableValue}`];\n        });\n\n        const formItems = [\n            {\n                name: 'value',\n                field: 'number',\n                fieldOptions: etherFieldOptions,\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a value!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'rate',\n                field: 'number',\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a rate!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'celerValue',\n                label: 'Celer Value',\n                field: 'number',\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a celer value!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'salt',\n                field: 'number',\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a salt!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'commitmentID',\n                field: 'select',\n                fieldOptions: {\n                    options: commitmentOptions\n                },\n                rules: [\n                    {\n                        message: 'Please enter a commitmentID!',\n                        required: true\n                    }\n                ]\n            }\n        ];\n\n        return (\n            <Modal\n                title=\"Reveal Auction\"\n                visible={visible}\n                onOk={this.onSubmit}\n                onCancel={onClose}\n            >\n                <Form ref={this.form} items={formItems} />\n            </Modal>\n        );\n    }\n}\n\nRevealForm.propTypes = {\n    auctionId: PropTypes.string.isRequired,\n    visible: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nRevealForm.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    const { contracts } = state;\n\n    return {\n        PoLC: contracts.PoLC\n    };\n}\n\nexport default drizzleConnect(RevealForm, mapStateToProps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport {\n    Alert,\n    Button,\n    Card,\n    Steps,\n    Skeleton,\n    Statistic,\n    Tabs,\n    List,\n    Row,\n    Col,\n    notification\n} from 'antd';\n\nimport BidTable from '../components/auction/bid-table';\nimport BidForm from '../components/auction/bid-form';\nimport RevealForm from '../components/auction/reveal-form';\nimport { formatEthValue } from '../utils/unit';\nimport {\n    getCurrentPeriod,\n    getWinners,\n    BID,\n    REVEAL,\n    CLAIM,\n    CHALLENGE,\n    FINALIZE,\n    EXPIRED,\n    FINALIZED\n} from '../utils/liba';\n\nconst { Step } = Steps;\n\nconst steps = [BID, REVEAL, CLAIM, CHALLENGE, FINALIZE];\n\nclass Auction extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.contracts = context.drizzle.contracts;\n        this.state = {\n            auction: null,\n            currentStep: 0,\n            currentPeriod: '',\n            isBidModalVisible: false,\n            isRevealModalVisible: false\n        };\n\n        const auctionId = parseInt(props.match.params.id);\n\n        this.contracts.LiBA.events.RevealBid(\n            {\n                fromBlock: 0,\n                filter: { auctionId }\n            },\n            (err, event) => {\n                if (err) {\n                    return;\n                }\n\n                const { auctionId, bidder } = event.returnValues;\n                this.contracts.LiBA.methods.bidsByUser.cacheCall(\n                    bidder,\n                    auctionId\n                );\n            }\n        );\n\n        this.contracts.LiBA.events.ClaimWinners(\n            {\n                fromBlock: 0,\n                filter: { auctionId }\n            },\n            (err, event) => {\n                if (err) {\n                    return;\n                }\n\n                const { winners } = event.returnValues;\n                this.setState({\n                    winners\n                });\n            }\n        );\n    }\n\n    static getDerivedStateFromProps(props) {\n        const { match, LiBA = {}, network } = props;\n\n        const auctions = _.values(LiBA.getAuction);\n        const auction = _.find(\n            auctions,\n            auction => auction.args[0] === match.params.id\n        );\n\n        if (!auction) {\n            return {};\n        }\n\n        const currentPeriod = getCurrentPeriod(\n            network,\n            auction,\n            LiBA.getAuctionPeriod\n        );\n        const currentStep = _.indexOf(steps, currentPeriod);\n        const auctionId = auction.args[0];\n\n        return { auction, auctionId, currentStep, currentPeriod };\n    }\n\n    takeAction = () => {\n        const { currentPeriod } = this.state;\n\n        switch (currentPeriod) {\n            case BID:\n                return this.toggleBidModal();\n            case REVEAL:\n                return this.toggleRevealModal();\n            case CLAIM:\n                return this.claimWinners();\n            case CHALLENGE:\n                return this.challengeWinners();\n            case FINALIZE:\n                return this.finalizeAuction();\n        }\n    };\n\n    toggleBidModal = () => {\n        this.setState(prevState => ({\n            isBidModalVisible: !prevState.isBidModalVisible\n        }));\n    };\n\n    toggleRevealModal = () => {\n        this.setState(prevState => ({\n            isRevealModalVisible: !prevState.isRevealModalVisible\n        }));\n    };\n\n    claimWinners = () => {\n        const { auction, auctionId } = this.state;\n        const { LiBA } = this.props;\n        const winners = getWinners(auction, _.values(LiBA.bidsByUser));\n\n        this.contracts.LiBA.methods.claimWinners(auctionId, winners).send();\n    };\n\n    challengeWinners = () => {\n        const { auction, auctionId, winners } = this.state;\n        const { LiBA } = this.props;\n        const calculatedWinners = getWinners(\n            auction,\n            _.values(LiBA.bidsByUser)\n        );\n\n        if (_.isEqual(winners, calculatedWinners)) {\n            notification.error({\n                message: 'There is no need to challenge winners'\n            });\n            return;\n        }\n\n        this.contracts.LiBA.methods\n            .challengeWinners(auctionId, calculatedWinners)\n            .send();\n    };\n\n    finalizeAuction = () => {\n        const { auctionId } = this.state;\n        this.contracts.LiBA.methods.finalizeAuction.cacheSend(auctionId);\n    };\n\n    finalizeBid = () => {\n        const { auctionId } = this.state;\n        this.contracts.LiBA.methods.finalizeBid.cacheSend(auctionId);\n    };\n\n    collectCollateral = () => {\n        const { auctionId } = this.state;\n        this.contracts.LiBA.methods.collectCollateral.cacheSend(auctionId);\n    };\n\n    repayAuction = () => {\n        const { auctionId } = this.state;\n        this.contracts.LiBA.methods.repayAuction.cacheSend(auctionId);\n    };\n\n    renderAction = () => {\n        const { accounts } = this.props;\n        const { auction, currentPeriod, currentStep, winners } = this.state;\n        const currentAccount = accounts[0];\n        const isAsker = currentAccount === auction.value.asker;\n\n        if (isAsker) {\n            if (currentPeriod === FINALIZED) {\n                return [\n                    <Button block type=\"primary\" onClick={this.repayAuction}>\n                        Repay\n                    </Button>\n                ];\n            }\n\n            if (!_.includes([CLAIM, FINALIZE], currentPeriod)) {\n                return [];\n            }\n        } else {\n            if (\n                currentPeriod === EXPIRED ||\n                (currentStep === -1 && !_.includes(winners, currentAccount))\n            ) {\n                return [\n                    <Button block type=\"primary\" onClick={this.finalizeBid}>\n                        Withdraw bid\n                    </Button>\n                ];\n            }\n\n            if (currentPeriod === FINALIZED) {\n                return [\n                    <Button\n                        block\n                        type=\"primary\"\n                        onClick={this.collectCollateral}\n                    >\n                        Collect collateral\n                    </Button>\n                ];\n            }\n\n            if (!_.includes([BID, REVEAL, CHALLENGE], currentPeriod)) {\n                return [];\n            }\n        }\n\n        return [\n            <Button block type=\"primary\" onClick={this.takeAction}>\n                {currentPeriod}\n            </Button>\n        ];\n    };\n\n    renderAuctionDetail = () => {\n        const { auction, winners } = this.state;\n        const {\n            asker,\n            tokenAddress,\n            collateralAddress,\n            collateralValue,\n            value,\n            duration,\n            maxRate,\n            minValue\n        } = auction.value;\n        const auctionId = auction.args[0];\n\n        return (\n            <Row style={{ marginTop: '10px' }}>\n                <Col span={24}>\n                    <Statistic title=\"Asker\" value={asker} />\n                </Col>\n                <Col span={24}>\n                    <Statistic title=\"Token Address\" value={tokenAddress} />\n                </Col>\n                <Col span={12}>\n                    <Statistic title=\"Value\" value={formatEthValue(value)} />\n                </Col>\n                <Col span={12}>\n                    <Statistic title=\"Duration\" value={duration} />\n                </Col>\n                <Col span={12}>\n                    <Statistic\n                        title=\"Min Value\"\n                        value={formatEthValue(minValue)}\n                    />\n                </Col>\n                <Col span={12}>\n                    <Statistic title=\"Max Rate\" value={maxRate} />\n                </Col>\n                {collateralValue > 0 && (\n                    <>\n                        (\n                        <Col span={12}>\n                            <Statistic\n                                title=\"Collateral Address\"\n                                value={collateralAddress}\n                            />\n                        </Col>\n                        <Col span={12}>\n                            <Statistic\n                                title=\"Collateral Value\"\n                                value={collateralValue}\n                            />\n                        </Col>\n                    </>\n                )}\n\n                <Col span={24}>\n                    <Tabs>\n                        <Tabs.TabPane tab=\"Bids\" key=\"bids\">\n                            <BidTable auctionId={auctionId} />\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"Winners\" key=\"winners\">\n                            <List\n                                size=\"small\"\n                                bordered\n                                dataSource={winners}\n                                renderItem={winner => (\n                                    <List.Item>{winner}</List.Item>\n                                )}\n                            />\n                        </Tabs.TabPane>\n                    </Tabs>\n                </Col>\n            </Row>\n        );\n    };\n\n    render() {\n        const {\n            auction,\n            currentStep,\n            currentPeriod,\n            isBidModalVisible,\n            isRevealModalVisible\n        } = this.state;\n\n        if (!auction) {\n            return <Skeleton />;\n        }\n\n        const auctionId = auction.args[0];\n        let alertMsg;\n\n        if (currentStep === -1)\n            alertMsg = <Alert message={currentPeriod} type=\"info\" showIcon />;\n\n        return (\n            <Card title=\"Auction\" actions={this.renderAction()}>\n                {alertMsg || (\n                    <Steps size=\"small\" current={currentStep}>\n                        {_.map(steps, step => (\n                            <Step key={step} title={step} />\n                        ))}\n                    </Steps>\n                )}\n\n                {this.renderAuctionDetail()}\n                <BidForm\n                    auctionId={auctionId}\n                    visible={isBidModalVisible}\n                    onClose={this.toggleBidModal}\n                />\n                <RevealForm\n                    auctionId={auctionId}\n                    visible={isRevealModalVisible}\n                    onClose={this.toggleRevealModal}\n                />\n            </Card>\n        );\n    }\n}\n\nAuction.propTypes = {\n    dispatch: PropTypes.func.isRequired\n};\n\nAuction.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    const { accounts, contracts, LiBA, network } = state;\n\n    return {\n        accounts,\n        network,\n        LiBA: { ...LiBA, ...contracts.LiBA }\n    };\n}\n\nexport default drizzleConnect(Auction, mapStateToProps);\n"],"sourceRoot":""}